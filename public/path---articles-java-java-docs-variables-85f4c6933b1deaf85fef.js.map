{"version":3,"sources":["webpack:///path---articles-java-java-docs-variables-85f4c6933b1deaf85fef.js","webpack:///./.cache/json/articles-java-java-docs-variables.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-java-java-docs-variables.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,OAERC,2FACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,moDACAC,aACAC,MAAA,sBACAC,OAAA,8FAIAC,aACAC,KAAA","file":"path---articles-java-java-docs-variables-85f4c6933b1deaf85fef.js","sourcesContent":["webpackJsonp([1551],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-java-java-docs-variables.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<h1>Java Variables</h1>\\n<p>Variables store values.</p>\\n<p>In <a href=\\\"https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Java\\\">Java</a>, variables are <a href=\\\"https://en.wikipedia.org/wiki/Strong_and_weak_typing#Definitions_of_.22strong.22_or_.22weak.22\\\"><em>strongly typed</em></a>, which means you have to define the type for each variable whenever you declare it. Otherwise, the compiler will throw error at <a href=\\\"https://en.wikipedia.org/wiki/Compile_time\\\">compile time</a>. Therefore, each variable has an associate data type of either :</p>\\n<ul>\\n<li>Primitive Type : <code>int</code>, <code>short</code>, <code>char</code>, <code>long</code>, <code>boolean</code>, <code>byte</code>, <code>float</code>, <code>double</code></li>\\n<li>Wrapper Type : <code>Integer</code>, <code>Short</code>, <code>Char</code>, <code>Long</code>, <code>Boolean</code>, <code>Byte</code>, <code>Float</code>, <code>Double</code></li>\\n<li>Object Type: <code>String</code>, <code>StringBuilder</code>, <code>Calendar</code>, <code>ArrayList</code> etc.</li>\\n</ul>\\n<p>We made a distinction between <strong>Wrapper Type</strong> and general <strong>Object Type</strong> for a reason - wrapper types are closely linked with their primitive counterparts via <a href=\\\"https://docs.oracle.com/javase/tutorial/java/data/autoboxing.html\\\">autoboxing and unboxing</a>; but more on that later.</p>\\n<p>Typically you can declare variables using the following syntax :</p>\\n<pre><code>//Primitive Data Type\\n\\nint i = 10;\\n\\n// Object Data Type\\n//initiates an Float object with value 1.0\\n// variable myFloat now points to the object\\nFloat myFloat = new Float(1.0);\\n</code></pre>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Java Docs Variables\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/java/java-docs-variables/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/java/java-docs-variables/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-java-java-docs-variables-85f4c6933b1deaf85fef.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<h1>Java Variables</h1>\\n<p>Variables store values.</p>\\n<p>In <a href=\\\"https://github.com/FreeCodeCamp/FreeCodeCamp/wiki/Java\\\">Java</a>, variables are <a href=\\\"https://en.wikipedia.org/wiki/Strong_and_weak_typing#Definitions_of_.22strong.22_or_.22weak.22\\\"><em>strongly typed</em></a>, which means you have to define the type for each variable whenever you declare it. Otherwise, the compiler will throw error at <a href=\\\"https://en.wikipedia.org/wiki/Compile_time\\\">compile time</a>. Therefore, each variable has an associate data type of either :</p>\\n<ul>\\n<li>Primitive Type : <code>int</code>, <code>short</code>, <code>char</code>, <code>long</code>, <code>boolean</code>, <code>byte</code>, <code>float</code>, <code>double</code></li>\\n<li>Wrapper Type : <code>Integer</code>, <code>Short</code>, <code>Char</code>, <code>Long</code>, <code>Boolean</code>, <code>Byte</code>, <code>Float</code>, <code>Double</code></li>\\n<li>Object Type: <code>String</code>, <code>StringBuilder</code>, <code>Calendar</code>, <code>ArrayList</code> etc.</li>\\n</ul>\\n<p>We made a distinction between <strong>Wrapper Type</strong> and general <strong>Object Type</strong> for a reason - wrapper types are closely linked with their primitive counterparts via <a href=\\\"https://docs.oracle.com/javase/tutorial/java/data/autoboxing.html\\\">autoboxing and unboxing</a>; but more on that later.</p>\\n<p>Typically you can declare variables using the following syntax :</p>\\n<pre><code>//Primitive Data Type\\n\\nint i = 10;\\n\\n// Object Data Type\\n//initiates an Float object with value 1.0\\n// variable myFloat now points to the object\\nFloat myFloat = new Float(1.0);\\n</code></pre>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Java Docs Variables\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/java/java-docs-variables/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/java/java-docs-variables/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-java-java-docs-variables.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-java-java-docs-variables.json\n// module chunks = 1551"],"sourceRoot":""}