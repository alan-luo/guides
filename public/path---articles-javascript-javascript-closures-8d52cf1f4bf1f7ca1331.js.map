{"version":3,"sources":["webpack:///path---articles-javascript-javascript-closures-8d52cf1f4bf1f7ca1331.js","webpack:///./.cache/json/articles-javascript-javascript-closures.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-javascript-javascript-closures.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,OAERC,iGACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,koBACAC,aACAC,MAAA,sBACAC,OAAA,oGAIAC,aACAC,KAAA","file":"path---articles-javascript-javascript-closures-8d52cf1f4bf1f7ca1331.js","sourcesContent":["webpackJsonp([1225],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-javascript-javascript-closures.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p>Closures are functions that refer to independent (free) variables (<code>name</code>), that have been returned by an enclosing function (<code>makeFunc</code>), and can still refer to those variables when they are called (<code>myFunc()</code>). As such, the closure (<code>makeFunc()</code>) 'remembers' the environment in which it was created.</p>\\n<pre><code>function makeFunc() {\\n  var name = \\\"Mozilla\\\";\\n  function displayName() {\\n    alert(name);\\n  }\\n  return displayName;\\n}\\n\\nvar myFunc = makeFunc();\\nmyFunc();\\n</code></pre>\\n<p>See <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures\\\">MDN</a></p>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"javaScript Closures\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/javascript/javascript-closures/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/javascript/javascript-closures/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-javascript-javascript-closures-8d52cf1f4bf1f7ca1331.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p>Closures are functions that refer to independent (free) variables (<code>name</code>), that have been returned by an enclosing function (<code>makeFunc</code>), and can still refer to those variables when they are called (<code>myFunc()</code>). As such, the closure (<code>makeFunc()</code>) 'remembers' the environment in which it was created.</p>\\n<pre><code>function makeFunc() {\\n  var name = \\\"Mozilla\\\";\\n  function displayName() {\\n    alert(name);\\n  }\\n  return displayName;\\n}\\n\\nvar myFunc = makeFunc();\\nmyFunc();\\n</code></pre>\\n<p>See <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures\\\">MDN</a></p>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"javaScript Closures\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/javascript/javascript-closures/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/javascript/javascript-closures/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-javascript-javascript-closures.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-javascript-javascript-closures.json\n// module chunks = 1225"],"sourceRoot":""}