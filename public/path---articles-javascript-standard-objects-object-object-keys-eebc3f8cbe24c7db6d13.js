webpackJsonp([1205],{"./node_modules/json-loader/index.js!./.cache/json/articles-javascript-standard-objects-object-object-keys.json":function(e,t){e.exports={data:{markdownRemark:{html:"<p>The <code>Object.keys()</code> method returns an array of a given object's own enumerable properties, in the same order as that provided by a <code>for...in</code> loop (the difference being that a <code>for-in</code> loop enumerates properties in the prototype chain as well).</p>\n<h2>Syntax</h2>\n<pre><code>Object.keys(obj)\n</code></pre>\n<h3>Parameters</h3>\n<p><strong>obj</strong></p>\n<p>The object whose enumerable own properties are to be returned.</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\">MDN link</a> | <a href=\"https://msdn.microsoft.com/en-us/LIBRary/ff688127(v=vs.94).aspx\">MSDN link</a></p>\n<h2>Description</h2>\n<p><code>Object.keys()</code> returns an array whose elements are strings corresponding to the enumerable properties found directly upon object. The ordering of the properties is the same as that given by looping over the properties of the object manually.</p>\n<h2>Examples</h2>\n<pre><code>var arr = ['a', 'b', 'c'];\nconsole.log(Object.keys(arr)); // console: ['0', '1', '2']\n\n// array like object\nvar obj = { 0: 'a', 1: 'b', 2: 'c' };\nconsole.log(Object.keys(obj)); // console: ['0', '1', '2']\n\n// array like object with random key ordering\nvar an_obj = { 100: 'a', 2: 'b', 7: 'c' };\nconsole.log(Object.keys(an_obj)); // console: ['2', '7', '100']\n\n// getFoo is property which isn't enumerable\nvar my_obj = Object.create({}, { getFoo: { value: function() { return this.foo; } } });\nmy_obj.foo = 1;\n\nconsole.log(Object.keys(my_obj)); // console: ['foo']\n\n// Create a constructor function.\nfunction Pasta(grain, width, shape) {\n    this.grain = grain;\n    this.width = width;\n    this.shape = shape;\n\n    // Define a method.\n    this.toString = function () {\n        return (this.grain + \", \" + this.width + \", \" + this.shape);\n    }\n}\n\n// Create an object.\nvar spaghetti = new Pasta(\"wheat\", 0.2, \"circle\");\n\n// Put the enumerable properties and methods of the object in an array.\nvar arr = Object.keys(spaghetti);\ndocument.write (arr);\n\n// Output:\n// grain,width,shape,toString\n</code></pre>",frontmatter:{title:"Object Keys",parent:"/home/stuart/guides/src/pages/articles/javascript/standard-objects/object/object-keys/index.md absPath of file"}}},pathContext:{slug:"/articles/javascript/standard-objects/object/object-keys/"}}}});
//# sourceMappingURL=path---articles-javascript-standard-objects-object-object-keys-eebc3f8cbe24c7db6d13.js.map