webpackJsonp([1873],{"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-symmetric-difference.json":function(e,t){e.exports={data:{markdownRemark:{html:'<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/triangular_flag_on_post.png?v=3" alt=":triangular_flag_on_post:" title=":triangular_flag_on_post:"> Remember to use <a><strong><code>Read-Search-Ask</code></strong></a> if you get stuck. Try to pair program <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/busts_in_silhouette.png?v=3" alt=":busts_in_silhouette:" title=":busts_in_silhouette:"> and write your own code <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/pencil.png?v=3" alt=":pencil:" title=":pencil:"></p>\n<h3><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/checkered_flag.png?v=3" alt=":checkered_flag:" title=":checkered_flag:"> Problem Explanation:</h3>\n<p>Symmetric difference is the difference between two sets i.e., the collection of elements which are members of either set but not both.</p>\n<p>In the symmetric difference algorithm, you would work through the arrays of numbers in this manner: <code>sym(A, B, C)</code> translates to <code>sym(sym(A, B), C)</code> i.e., the symmetric difference of set A and set B is found first and then, the symmetric difference of the resultant set and set C is found.</p>\n<p>Example: <code>sym([1, 2, 5], [2, 3, 5], [3, 4, 5])</code> equals <code>[1, 4, 5]</code>.</p>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="https://www.youtube.com/watch?v=PxffSUQRkG4">YouTube - Symmetric difference</a></li>\n<li><a href="https://en.wikipedia.org/wiki/Symmetric_difference">Symmetric difference</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">JS Object</a></li>\n<li><a href="http://forum.freecodecamp.com/t/javascript-arguments/14283">JS Arguments</a></li>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-prototype-reduce/14299">JS Array Prototype Reduce</a></li>\n<li><a href="http://forum.freecodecamp.com/t/using-array-prototype-reduce-to-reduce-conceptual-boilerplate-for-problems-on-arrays/14687">JS Reduce Made Easy</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" alt=":speech_balloon:" title=":speech_balloon:"> Hint: 1</h2>\n<p>The <strong>arguments</strong> object is not an array. It is similar to an array, but does not have any array properties except length. For example, it does not have the <code>pop</code> method. However, it can be converted to a real array: <code>var args = Array.prototype.slice.call(arguments);</code></p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" alt=":speech_balloon:" title=":speech_balloon:"> Hint: 2</h2>\n<p>Write a function that returns the symmetric difference of the two arrays: <code>yourFunction([1, 2, 3], [2, 4, 6])</code> must return <code>[1, 3, 4, 6]</code></p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" alt=":speech_balloon:" title=":speech_balloon:"> Hint: 3</h2>\n<p>Use <code>Array.prototype.reduce</code> along with <code>yourFunction</code> to repeat the process on multiple arguments</p>\n<p>Something strange about the definition of symmetric difference is that if one identical item occurs in three different sets, it is a member of the symmetric difference. For example:</p>\n<pre><code>a = [1, 2, 5]\nb = [2, 3, 5]\nc = [3, 4, 5]\n\nsym(a, b) = [1, 3]\nsym([1, 3], c) = [1, 4, 5]\n</code></pre>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2>Spoiler Alert!</h2>\n<p><img src="//discourse-user-assets.s3.amazonaws.com/original/2X/2/2d6c412a50797771301e7ceabd554cef4edcd74d.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></p>\n<p><strong>Solution ahead!</strong></p>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/beginner.png?v=3" alt=":beginner:" title=":beginner:"> Basic Code Solution:</h2>\n<pre><code>function sym() {\n    var args = [];\n    for (var i = 0; i &#x3C; arguments.length; i++) {\n        args.push(arguments[i]);\n    }\n\n    function symDiff(arrayOne, arrayTwo) {\n        var result = [];\n\n        arrayOne.forEach(function(item) {\n            if (arrayTwo.indexOf(item) &#x3C; 0 &#x26;&#x26; result.indexOf(item) &#x3C; 0) {\n                result.push(item);\n            }\n        });\n\n        arrayTwo.forEach(function(item) {\n            if (arrayOne.indexOf(item) &#x3C; 0 &#x26;&#x26; result.indexOf(item) &#x3C; 0) {\n                result.push(item);\n            }\n        });\n\n        return result;\n    }\n\n    // Apply reduce method to args array, using the symDiff function\n    return args.reduce(symDiff);\n}\n</code></pre>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/C4II/0">Run Code</a></p>\n<h3>Code Explanation:</h3>\n<ul>\n<li><code>push()</code> is used to break down the <strong>arguments</strong> object to an array, <strong>args</strong>.</li>\n<li>The <code>symDiff</code> function finds the symmetric difference between two sets. It is used as a callback function for the <code>reduce()</code> method called on <strong>args</strong>.</li>\n<li><code>arrayOne.forEach()</code> pushes the elements to <strong>result</strong> which are present only in <strong>arrayOne</strong> as well as not already a part of <strong>result</strong>.</li>\n<li><code>arrayTwo.forEach()</code> pushes the elements to <strong>result</strong> which are present only in <strong>arrayTwo</strong> as well as not already a part of <strong>result</strong>.</li>\n<li>The <strong>result</strong>, which is the symmetric difference is returned. This solution works for any number of sets.</li>\n</ul>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="http://forum.freecodecamp.com/t/javascript-for-loop/14666s-Explained">JS For Loops Explained</a></li>\n<li><a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/length">array.length</a></li>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-prototype-push/14298">JS Array Prototype Push</a></li>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-prototype-foreach/14290">JS Array Prototype ForEach</a></li>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-prototype-indexof/14291">JS Array Prototype IndexOf</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/sunflower.png?v=3" alt=":sunflower:" title=":sunflower:"> Intermediate Code Solution:</h2>\n<pre><code>function sym() {\n\n  // Convert the argument object into a proper array\n  var args = Array.prototype.slice.call(arguments);\n\n  // Return the symmetric difference of 2 arrays\n  var getDiff = function(arr1, arr2) {\n\n    // Returns items in arr1 that don\'t exist in arr2\n    function filterFunction(arr1, arr2) {\n      return arr1.filter(function(item) {\n        return arr2.indexOf(item) === -1;\n      });\n    }\n\n    // Run filter function on each array against the other\n    return filterFunction(arr1, arr2)\n      .concat(filterFunction(arr2, arr1));\n  };\n\n  // Reduce all arguments getting the difference of them\n  var symarray = args.reduce(getDiff, []);\n\n  // Run filter function to get the unique values\n  var unique = symarray.filter(function(elem, index, self) {\n    return index === self.indexOf(elem);\n    });\n  return unique;\n}\n\n// test here\nsym([1, 2, 3], [5, 2, 1, 4]);\n</code></pre>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/CLoc/0">Run Code</a></p>\n<h3>Code Explanation:</h3>\n<ul>\n<li>The <code>slice()</code> method is used to break down the <strong>arguments</strong> object to an array, <strong>args</strong>.</li>\n<li>The <code>getDiff</code> function finds the symmetric difference between two sets, <strong>arr1</strong> and <strong>arr2</strong>. It is used as a callback function for the <code>reduce()</code> method called on <strong>args</strong>.</li>\n<li>The first <code>filterFunction()</code> returns elements in <strong>arr1</strong> that don\'t exist in <strong>arr2</strong>.</li>\n<li>The next <code>filterFunction()</code> is run on each array against the other to check the inverse of the first check for uniqueness and concatenate it.</li>\n<li><strong>symarray</strong> consists of the reduced arguments.</li>\n<li><code>filter()</code> is used on <strong>symarray</strong> to keep only the unique values and <strong>unique</strong> is returned.</li>\n</ul>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-prototype-slice/14302">JS Array Prototype Slice</a></li>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-prototype-filter/14289">JS Array Prototype Filter</a></li>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-prototype-concat/14286">JS Array Prototype Concat</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rotating_light.png?v=3" alt=":rotating_light:" title=":rotating_light:"> Advanced Code Solution:</h2>\n<pre><code>function sym() {\n  // difference between set A and set B\n  const diff = (A, B) => new Set([...A].filter(n => !B.has(n)));\n  // spread operator to convert array like object to array\n  const result = [...arguments]\n    // map elements in arguments (array) to Set\n    .map(arr => new Set(arr))\n    // using the formula in https://en.wikipedia.org/wiki/Symmetric_difference\n    // i reduce it by uniting the diff(A, B) and diff(B, A)\n    .reduce((acc, set) => new Set([...diff(acc, set), ...diff(set, acc)]));\n\n  // convert the set to array by using spread operator again\n  return [...result];\n}\n\n// test here\nsym([1, 2, 3], [5, 2, 1, 4]);\n</code></pre>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/CLod/0">Run Code</a></p>\n<h3>Code Explanation:</h3>\n<ul>\n<li><strong>diff</strong> consists of the difference between set A and set B.</li>\n<li><strong>result</strong> holds the object which has been converted to an array using the spread operator.</li>\n<li><code>map()</code> is used to populate the new set object with elements from <strong>arr</strong> using the symmetric difference formula.</li>\n<li>Before returning, the set is converted to an array using the spread operator.</li>\n</ul>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set">Set object</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/has">Set.prototype.has()</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator">Spread operator</a></li>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-prototype-map/14294">JS Array Prototype Map</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has">Map.prototype.has()</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/clipboard.png?v=3" alt=":clipboard:" title=":clipboard:"> NOTES FOR CONTRIBUTIONS:</h2>\n<ul>\n<li><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3" alt=":warning:" title=":warning:"> <strong>DO NOT</strong> add solutions that are similar to any existing solutions. If you think it is <strong><em>similar but better</em></strong>, then try to merge (or replace) the existing similar solution.</li>\n<li>Add an explanation of your solution.</li>\n<li>Categorize the solution in one of the following categories — <strong>Basic</strong>, <strong>Intermediate</strong> and <strong>Advanced</strong>. <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/traffic_light.png?v=3" alt=":traffic_light:" title=":traffic_light:"></li>\n<li>Please add your username only if you have added any <strong>relevant main contents</strong>. (<img src="https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3" alt=":warning:" title=":warning:"> <strong><em>DO NOT</em></strong> <em>remove any existing usernames</em>)</li>\n</ul>\n<blockquote>\n<p>See <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/point_right.png?v=3" alt=":point_right:" title=":point_right:"> <a href="http://forum.freecodecamp.com/t/algorithm-article-template/14272"><strong><code>Wiki Challenge Solution Template</code></strong></a> for reference.</p>\n</blockquote>',frontmatter:{title:"Symmetric Difference",parent:"/home/stuart/guides/src/pages/articles/certificates/symmetric-difference/index.md absPath of file"}}},pathContext:{slug:"/articles/certificates/symmetric-difference/"}}}});
//# sourceMappingURL=path---articles-certificates-symmetric-difference-fabba11a2516c0272e00.js.map