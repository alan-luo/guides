{"version":3,"sources":["webpack:///path---articles-certificates-prefilter-json-54c46dfd17bd16493f28.js","webpack:///./.cache/json/articles-certificates-prefilter-json.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-certificates-prefilter-json.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,OAERC,8FACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,0bACAC,aACAC,MAAA,iBACAC,OAAA,iGAIAC,aACAC,KAAA","file":"path---articles-certificates-prefilter-json-54c46dfd17bd16493f28.js","sourcesContent":["webpackJsonp([2141],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-prefilter-json.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p>The <strong>filter()</strong> method creates a new array with all elements that pass the test implemented by the provided function.</p>\\n<p>So when you don't want to work with all the elements from the array then you can use filter.</p>\\n<p>Let's filter out the cat who's \\\"id\\\" key has a value of 1.</p>\\n<p>Here's the code to do this:</p>\\n<pre><code>json = json.filter(function(val) {\\n\\n  return(val.id !== 1);\\n\\n});\\n</code></pre>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Prefilter JSON\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/certificates/prefilter-json/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/certificates/prefilter-json/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-certificates-prefilter-json-54c46dfd17bd16493f28.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p>The <strong>filter()</strong> method creates a new array with all elements that pass the test implemented by the provided function.</p>\\n<p>So when you don't want to work with all the elements from the array then you can use filter.</p>\\n<p>Let's filter out the cat who's \\\"id\\\" key has a value of 1.</p>\\n<p>Here's the code to do this:</p>\\n<pre><code>json = json.filter(function(val) {\\n\\n  return(val.id !== 1);\\n\\n});\\n</code></pre>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Prefilter JSON\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/certificates/prefilter-json/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/certificates/prefilter-json/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-certificates-prefilter-json.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-certificates-prefilter-json.json\n// module chunks = 2141"],"sourceRoot":""}