{"version":3,"sources":["webpack:///path---articles-miscellaneous-the-history-of-ruby-aacbed145583cfbede19.js","webpack:///./.cache/json/articles-miscellaneous-the-history-of-ruby.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-miscellaneous-the-history-of-ruby.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,MAERC,oGACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,+uFACAC,aACAC,MAAA,sBACAC,OAAA,uGAIAC,aACAC,KAAA","file":"path---articles-miscellaneous-the-history-of-ruby-aacbed145583cfbede19.js","sourcesContent":["webpackJsonp([250],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-miscellaneous-the-history-of-ruby.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p><a href=\\\"https://www.ruby-lang.org/en/\\\">Ruby</a> is a dynamic, object-oriented, <a href=\\\"https://en.wikipedia.org/wiki/Reflection_(computer_programming)\\\">reflective</a> programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write. It also has a dynamic type system and automatic memory management.</p>\\n<p>Known for its <a href=\\\"https://en.wikipedia.org/wiki/Syntactic_sugar\\\">syntactic sugar</a>, Ruby is made for developer's happiness. It was created by a Japanese software engineer, <a href=\\\"https://en.wikipedia.org/wiki/Yukihiro_Matsumoto\\\">Yukihiro Matsumoto</a> (also popularly known as Matz) as a simple general purpose scripting language for his day-to-day work. Combining elements of Perl, Smalltalk, and Scheme in a simple yet powerful syntax.</p>\\n<p>Ruby was conceived on February 24, 1993. In a 1999 post to the ruby-talk mailing list, Yukihiro Matsumoto describes some of his early ideas about the language:</p>\\n<blockquote>\\n<p>I was talking with my colleague about the possibility of an object-oriented scripting language. I knew Perl (Perl4, not Perl5), but I didn't like it really, because it had the smell of a toy language (it still has). The object-oriented language seemed very promising. I knew Python then. But I didn't like it, because I didn't think it was a true object-oriented language — OO features appeared to be add-on to the language. As a language maniac and OO fan for 15 years, I really wanted a genuine object-oriented, easy-to-use scripting language. I looked for but couldn't find one. So I decided to make it.</p>\\n</blockquote>\\n<p>Like Perl, Ruby is good at text processing. Like Smalltalk, everything in Ruby is an object, and Ruby has blocks, iterators, meta-classes and other good stuff. You can use Ruby to write servers, experiment with prototypes, and for everyday programming tasks. As a fully-integrated object-oriented language, Ruby scales well.</p>\\n<p>By 2000, Ruby was more popular than Python in Japan; but as the <a href=\\\"http://rubyonrails.org/\\\">Ruby on Rails</a> web framework was created and released; it grew in leaps and bounds, well beyond Japan.</p>\\n<p>Today, Ruby on Rails is considered a solid web framework; and it has pioneered lot of great practices in web development.</p>\\n<p>Similarly a lot of <a href=\\\"https://prograils.com/posts/top-10-famous-sites-built-with-ruby-on-rails\\\">popular sites</a> are coded in Ruby on Rails like Github, Airbnb, Groupon, etc.</p>\\n<p>There are various <a href=\\\"https://github.com/cogitator/ruby-implementations/wiki/List-of-Ruby-implementations\\\">implementations</a> of Ruby. JRuby (Ruby on the JVM), Ruby MRI (also called CRuby) and IronRuby (Ruby for .NET and Silverlight) are some of the most popular ones.</p>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"The History of Ruby\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/miscellaneous/the-history-of-ruby/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/miscellaneous/the-history-of-ruby/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-miscellaneous-the-history-of-ruby-aacbed145583cfbede19.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p><a href=\\\"https://www.ruby-lang.org/en/\\\">Ruby</a> is a dynamic, object-oriented, <a href=\\\"https://en.wikipedia.org/wiki/Reflection_(computer_programming)\\\">reflective</a> programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write. It also has a dynamic type system and automatic memory management.</p>\\n<p>Known for its <a href=\\\"https://en.wikipedia.org/wiki/Syntactic_sugar\\\">syntactic sugar</a>, Ruby is made for developer's happiness. It was created by a Japanese software engineer, <a href=\\\"https://en.wikipedia.org/wiki/Yukihiro_Matsumoto\\\">Yukihiro Matsumoto</a> (also popularly known as Matz) as a simple general purpose scripting language for his day-to-day work. Combining elements of Perl, Smalltalk, and Scheme in a simple yet powerful syntax.</p>\\n<p>Ruby was conceived on February 24, 1993. In a 1999 post to the ruby-talk mailing list, Yukihiro Matsumoto describes some of his early ideas about the language:</p>\\n<blockquote>\\n<p>I was talking with my colleague about the possibility of an object-oriented scripting language. I knew Perl (Perl4, not Perl5), but I didn't like it really, because it had the smell of a toy language (it still has). The object-oriented language seemed very promising. I knew Python then. But I didn't like it, because I didn't think it was a true object-oriented language — OO features appeared to be add-on to the language. As a language maniac and OO fan for 15 years, I really wanted a genuine object-oriented, easy-to-use scripting language. I looked for but couldn't find one. So I decided to make it.</p>\\n</blockquote>\\n<p>Like Perl, Ruby is good at text processing. Like Smalltalk, everything in Ruby is an object, and Ruby has blocks, iterators, meta-classes and other good stuff. You can use Ruby to write servers, experiment with prototypes, and for everyday programming tasks. As a fully-integrated object-oriented language, Ruby scales well.</p>\\n<p>By 2000, Ruby was more popular than Python in Japan; but as the <a href=\\\"http://rubyonrails.org/\\\">Ruby on Rails</a> web framework was created and released; it grew in leaps and bounds, well beyond Japan.</p>\\n<p>Today, Ruby on Rails is considered a solid web framework; and it has pioneered lot of great practices in web development.</p>\\n<p>Similarly a lot of <a href=\\\"https://prograils.com/posts/top-10-famous-sites-built-with-ruby-on-rails\\\">popular sites</a> are coded in Ruby on Rails like Github, Airbnb, Groupon, etc.</p>\\n<p>There are various <a href=\\\"https://github.com/cogitator/ruby-implementations/wiki/List-of-Ruby-implementations\\\">implementations</a> of Ruby. JRuby (Ruby on the JVM), Ruby MRI (also called CRuby) and IronRuby (Ruby for .NET and Silverlight) are some of the most popular ones.</p>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"The History of Ruby\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/miscellaneous/the-history-of-ruby/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/miscellaneous/the-history-of-ruby/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-miscellaneous-the-history-of-ruby.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-miscellaneous-the-history-of-ruby.json\n// module chunks = 250"],"sourceRoot":""}