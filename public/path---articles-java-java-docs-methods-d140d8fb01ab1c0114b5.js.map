{"version":3,"sources":["webpack:///path---articles-java-java-docs-methods-d140d8fb01ab1c0114b5.js","webpack:///./.cache/json/articles-java-java-docs-methods.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-java-java-docs-methods.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,OAERC,yFACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,uoBACAC,aACAC,MAAA,oBACAC,OAAA,4FAIAC,aACAC,KAAA","file":"path---articles-java-java-docs-methods-d140d8fb01ab1c0114b5.js","sourcesContent":["webpackJsonp([1332],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-java-java-docs-methods.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<h1>Java Methods</h1>\\n<p><code>getName()</code> and <code>getManufacturerName()</code> are two \\\"Getter\\\" methods we have used here. Notice, unlike JavaScript, we <strong>have</strong> to define the return type of any method we write, otherwise it will fail at compile time. If you do not want a method to return anything, use <code>void</code> return type.</p>\\n<pre><code>public class Car {\\n    private String name;\\n\\n    public void changeName() {\\n        name = \\\"Tesla\\\";\\n    }\\n}\\n</code></pre>\\n<p>As with any other language, methods (or functions, if you are here from JS world) are used often for their modularity and reusability.</p>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Java Docs Methods\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/java/java-docs-methods/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/java/java-docs-methods/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-java-java-docs-methods-d140d8fb01ab1c0114b5.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<h1>Java Methods</h1>\\n<p><code>getName()</code> and <code>getManufacturerName()</code> are two \\\"Getter\\\" methods we have used here. Notice, unlike JavaScript, we <strong>have</strong> to define the return type of any method we write, otherwise it will fail at compile time. If you do not want a method to return anything, use <code>void</code> return type.</p>\\n<pre><code>public class Car {\\n    private String name;\\n\\n    public void changeName() {\\n        name = \\\"Tesla\\\";\\n    }\\n}\\n</code></pre>\\n<p>As with any other language, methods (or functions, if you are here from JS world) are used often for their modularity and reusability.</p>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Java Docs Methods\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/java/java-docs-methods/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/java/java-docs-methods/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-java-java-docs-methods.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-java-java-docs-methods.json\n// module chunks = 1332"],"sourceRoot":""}