webpackJsonp([1974],{"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-find-the-longest-word-in-a-string.json":function(e,t){e.exports={data:{markdownRemark:{html:'<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/triangular_flag_on_post.png?v=3" alt=":triangular_flag_on_post:" title=":triangular_flag_on_post:"> Remember to use <a><strong><code>Read-Search-Ask</code></strong></a> if you get stuck. Try to pair program <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/busts_in_silhouette.png?v=3" alt=":busts_in_silhouette:" title=":busts_in_silhouette:"> and write your own code <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/pencil.png?v=3" alt=":pencil:" title=":pencil:"></p>\n<h3><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/checkered_flag.png?v=3" alt=":checkered_flag:" title=":checkered_flag:"> Problem Explanation:</h3>\n<p>You have to go through each word and figure out which one is the longest and return not the word, but how many characters it has.</p>\n<h4>Relevant Links</h4>\n<ul>\n<li><a>JS String Length</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" alt=":speech_balloon:" title=":speech_balloon:"> Hint: 1</h2>\n<p>You should split the string into an array of words.</p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" alt=":speech_balloon:" title=":speech_balloon:"> Hint: 2</h2>\n<p>You will need to figure out a way to keep track globally of the greatest current length.</p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" alt=":speech_balloon:" title=":speech_balloon:"> Hint: 3</h2>\n<p>Remember how to get the length of elements on the array? <code>Array[index].length</code>.</p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2>Spoiler Alert!</h2>\n<p><img src="//discourse-user-assets.s3.amazonaws.com/original/2X/2/2d6c412a50797771301e7ceabd554cef4edcd74d.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></p>\n<p><strong>Solution ahead!</strong></p>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/beginner.png?v=3" alt=":beginner:" title=":beginner:"> Basic Code Solution:</h2>\n<pre><code>function findLongestWord(str) {\n  var words = str.split(\' \');\n  var maxLength = 0;\n\n  for (var i = 0; i &#x3C; words.length; i++) {\n    if (words[i].length > maxLength) {\n      maxLength = words[i].length;\n    }\n  }\n\n  return maxLength;\n}\n</code></pre>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/CLjU/5">Run Code</a></p>\n<h3>Code Explanation:</h3>\n<p>Take the string and convert it into an array of words. Declare a variable to keep track of the maximum length and loop from 0 to the length of the array of words.</p>\n<p>Then check for the longest word by comparing the current word to the previous one and storing the new longest word. At the end of the loop just return the number value of the variable maxLength.</p>\n<h4>Relevant Links</h4>\n<ul>\n<li><a>JS String Length</a></li>\n<li><a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/length">JS Array.length</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/sunflower.png?v=3" alt=":sunflower:" title=":sunflower:"> Intermediate Code Solution:</h2>\n<p><strong>Using <code>.reduce()</code></strong></p>\n<pre><code>function findLongestWord(s) {\n  return s.split(\' \')\n    .reduce(function(x, y) {\n      return Math.max(x, y.length)\n    }, 0);\n}\n</code></pre>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/CLjU/6">Run Code</a></p>\n<h3>Code Explanation:</h3>\n<p>For more information on <code>reduce</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce">click here.</a>  </p>\n<p>In case you\'re wondering about that <code>0</code> after the callback function, it is used to give an initial value to the <code>x</code>, so that <code>Math.max</code> will know where to start.</p>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-prototype-reduce/14299">JS Reduce</a></li>\n<li><a href="http://forum.freecodecamp.com/t/using-array-prototype-reduce-to-reduce-conceptual-boilerplate-for-problems-on-arrays/14687">JS Reduce Made Easy</a></li>\n<li><a href="http://forum.freecodecamp.com/t/javascript-math-max/14682.md">JS Math Max</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rotating_light.png?v=3" alt=":rotating_light:" title=":rotating_light:"> Advanced Code Solution:</h2>\n<p><strong>Using recursiveness</strong></p>\n<pre><code>function findLongestWord(str) {\n\n  //split the string into individual words \n  //(important!!, you\'ll see why later)\n  str = str.split(" ");\n\n  //str only has 1 element left that is the longest element, \n  //return the length of that element\n  if(str.length == 1){\n    return str[0].length;\n  }\n\n  //if the first element\'s length is greater than the second element\'s (or equal) \n  //remove the second element and recursively call the function)\n  if(str[0].length >= str[1].length){\n    str.splice(1,1);\n    return findLongestWord(str.join(" "));\n  }\n\n  //if the second element\'s length is greater thant the first element\'s start \n  //call the function past the first element \n  if(str[0].length &#x3C;= str[1].length){\n    // from the first element to the last element inclusive.\n    return findLongestWord(str.slice(1,str.length).join(" "));\n  }\n}\n</code></pre>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/CLjU/7">Run Code</a></p>\n<h3>Code Explanation:</h3>\n<p>The first line splits the string into individual words. Then we check if <code>str</code> only has 1 element left then that is the longest element and we return it. If the first element\'s length is greater than the second element\'s (or equal), we remove the second element and recursively call the function <code>findLongestWord</code>. However, if the second element\'s length is greater thant the first element\'s start, then we call the function past the first element.</p>\n<h4>Relevant Links</h4>\n<ul>\n<li><a>JS Functions</a></li>\n<li><a href="https://www.youtube.com/watch?v=k7-N8R0-KY4">Recursion Basics</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/clipboard.png?v=3" alt=":clipboard:" title=":clipboard:"> NOTES FOR CONTRIBUTIONS:</h2>\n<ul>\n<li><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3" alt=":warning:" title=":warning:"> <strong>DO NOT</strong> add solutions that are similar to any existing solutions. If you think it is <strong><em>similar but better</em></strong>, then try to merge (or replace) the existing similar solution.</li>\n<li>Add an explanation of your solution.</li>\n<li>Categorize the solution in one of the following categories â€” <strong>Basic</strong>, <strong>Intermediate</strong> and <strong>Advanced</strong>. <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/traffic_light.png?v=3" alt=":traffic_light:" title=":traffic_light:"></li>\n<li>Please add your username only if you have added any <strong>relevant main contents</strong>. (<img src="https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3" alt=":warning:" title=":warning:"> <strong><em>DO NOT</em></strong> <em>remove any existing usernames</em>)</li>\n</ul>\n<blockquote>\n<p>See <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/point_right.png?v=3" alt=":point_right:" title=":point_right:"> <a href="http://forum.freecodecamp.com/t/algorithm-article-template/14272"><strong><code>Wiki Challenge Solution Template</code></strong></a> for reference.</p>\n</blockquote>',frontmatter:{title:"Find the Longest Word In A String",parent:"/home/stuart/guides/src/pages/articles/certificates/find-the-longest-word-in-a-string/index.md absPath of file"}}},pathContext:{slug:"/articles/certificates/find-the-longest-word-in-a-string/"}}}});
//# sourceMappingURL=path---articles-certificates-find-the-longest-word-in-a-string-054d3664dd3fcc5ed7ec.js.map