{"version":3,"sources":["webpack:///path---articles-javascript-naming-convention-for-javascript-6612da9afb52bea22ff5.js","webpack:///./.cache/json/articles-javascript-naming-convention-for-javascript.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-javascript-naming-convention-for-javascript.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,OAERC,8GACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,gyBACAC,aACAC,MAAA,mCACAC,OAAA,iHAIAC,aACAC,KAAA","file":"path---articles-javascript-naming-convention-for-javascript-6612da9afb52bea22ff5.js","sourcesContent":["webpackJsonp([1127],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-javascript-naming-convention-for-javascript.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p>Here you will get an overview of the different code case that are used widely used.</p>\\n<h2>camelCase</h2>\\n<p>In programming camelCase formatting for variable names looks like this:</p>\\n<pre><code>var camelCase = \\\"lower-case first word, capitalize each subsequent word\\\";\\n</code></pre>\\n<h2>PascalCase</h2>\\n<p>Another form of this case, often referred to as PascalCase or just CamelCase, and differs by having each word in the variable capitalized like so:</p>\\n<pre><code>var PascalCase = \\\"upper-case every word\\\";\\n</code></pre>\\n<h2>snake_case</h2>\\n<p>Another popular code case for variable naming called snake case involves sperating each word with underscores in this manner:</p>\\n<pre><code>var snake_case = \\\"lower-case everything, but separate words with underscores\\\";\\n</code></pre>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Naming Convention for javaScript\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/javascript/naming-convention-for-javascript/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/javascript/naming-convention-for-javascript/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-javascript-naming-convention-for-javascript-6612da9afb52bea22ff5.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p>Here you will get an overview of the different code case that are used widely used.</p>\\n<h2>camelCase</h2>\\n<p>In programming camelCase formatting for variable names looks like this:</p>\\n<pre><code>var camelCase = \\\"lower-case first word, capitalize each subsequent word\\\";\\n</code></pre>\\n<h2>PascalCase</h2>\\n<p>Another form of this case, often referred to as PascalCase or just CamelCase, and differs by having each word in the variable capitalized like so:</p>\\n<pre><code>var PascalCase = \\\"upper-case every word\\\";\\n</code></pre>\\n<h2>snake_case</h2>\\n<p>Another popular code case for variable naming called snake case involves sperating each word with underscores in this manner:</p>\\n<pre><code>var snake_case = \\\"lower-case everything, but separate words with underscores\\\";\\n</code></pre>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Naming Convention for javaScript\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/javascript/naming-convention-for-javascript/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/javascript/naming-convention-for-javascript/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-javascript-naming-convention-for-javascript.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-javascript-naming-convention-for-javascript.json\n// module chunks = 1127"],"sourceRoot":""}