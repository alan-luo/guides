webpackJsonp([183],{"./node_modules/json-loader/index.js!./.cache/json/articles-python-python-idobject.json":function(e,t){e.exports={data:{markdownRemark:{html:'<p><code>id()</code> is a built-in function in Python 3, which returns the <em>identity</em> of an object. The <em>identity</em> is a unique integer for that object during its lifetime. This is also the address of the object in memory.</p>\n<h2>Argument</h2>\n<h4>object</h4>\n<p>The <code>object</code> argument can typically be a <code>int</code>,<code>float</code>,<code>str</code>,<code>list</code>,<code>dict</code>,<code>tuple</code> etc.</p>\n<h2>Code Sample</h2>\n<pre><code>a = 2\nprint(id(a)) #=> 140454723286976 (Values returned by id() might be different for different users)\n\nb = 3\nprint(id(b)) #=> 140454723287008\n\nc = 2\nprint(id(c)) #=> 140454723286976 (This is same as id(a) since they both contain the same value and hence have same memory address)\n\nprint(id(a) == id(b)) #=> False (since a and b have different values stored in them)\nprint(id(a) == id(c)) #=> True (since a and c have same values stored in them)\n\nd = 1.1\ne = 1.1 \nprint(id(d) == id(e)) #=> True (since d and e have same values stored in them)\n\nstr1 = \'hello\'\nstr2 = \'hello\'\nprint(id(str1) == id(str2)) #=> True (since str1 and str2 have same values stored in them)\n\n# For complex objects like lists, tuples, dictionaries etc. id() would give a unique integer even if the content of those containers is same.\ntup1 = (1,1)\ntup2 = (1,1)\nprint(id(tup1) == id(tup2)) #=> False\n</code></pre>\n<p><img src="//forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=2" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/CQw7/1">Run Code</a></p>\n<p><a href="https://docs.python.org/3/library/functions.html#id">Official Docs</a></p>',frontmatter:{title:"Python Idobject",parent:"/home/stuart/guides/src/pages/articles/python/python-idobject/index.md absPath of file"}}},pathContext:{slug:"/articles/python/python-idobject/"}}}});
//# sourceMappingURL=path---articles-python-python-idobject-aef562226e600abb166a.js.map