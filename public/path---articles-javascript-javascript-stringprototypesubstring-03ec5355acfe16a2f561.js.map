{"version":3,"sources":["webpack:///path---articles-javascript-javascript-stringprototypesubstring-03ec5355acfe16a2f561.js","webpack:///./.cache/json/articles-javascript-javascript-stringprototypesubstring.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-javascript-javascript-stringprototypesubstring.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,OAERC,iHACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,kyEACAC,aACAC,MAAA,sCACAC,OAAA,oHAIAC,aACAC,KAAA","file":"path---articles-javascript-javascript-stringprototypesubstring-03ec5355acfe16a2f561.js","sourcesContent":["webpackJsonp([1157],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-javascript-javascript-stringprototypesubstring.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p>The <code>substring()</code> method returns a subset of a string between one index and another, or through the end of the string.</p>\\n<h2>Syntax</h2>\\n<pre><code>str.substring(indexStart[, indexEnd])\\n</code></pre>\\n<h2>Parameters</h2>\\n<p><strong>indexStart</strong></p>\\n<p>An integer between 0 and the length of the string, specifying the offset into the string of the first character to include in the returned substring.</p>\\n<p><strong>indexEnd</strong></p>\\n<p>Optional. An integer between 0 and the length of the string, which specifies the offset into the string of the first character not to include in the returned substring.</p>\\n<p><a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substring\\\">MDN link</a> | <a href=\\\"https://msdn.microsoft.com/en-us/LIBRary/3cz15ahb(v=vs.94).aspx\\\">MSDN link</a></p>\\n<h2>Description</h2>\\n<p><code>substring()</code> extracts characters from <code>indexStart</code> up to but not including <code>indexEnd</code>. In particular:</p>\\n<ul>\\n<li>If <code>indexStart</code> equals <code>indexEnd</code>, <code>substring()</code> returns an empty string.</li>\\n<li>If <code>indexEnd</code> is omitted, <code>substring()</code> extracts characters to the end of the string.</li>\\n<li>If either argument is less than 0 or is <code>NaN</code>, it is treated as if it were 0.</li>\\n<li>If either argument is greater than <code>stringName.length</code>, it is treated as if it were <code>stringName.length</code>.</li>\\n</ul>\\n<p>If <code>indexStart</code> is greater than <code>indexEnd</code>, then the effect of <code>substring()</code> is as if the two arguments were swapped; for example, <code>str.substring(1, 0) == str.substring(0, 1)</code>.</p>\\n<h2>Examples</h2>\\n<pre><code>var anyString = 'Mozilla';\\n\\n// Displays 'Moz'\\nconsole.log(anyString.substring(0, 3));\\nconsole.log(anyString.substring(3, 0));\\n\\n// Displays 'lla'\\nconsole.log(anyString.substring(4, 7));\\nconsole.log(anyString.substring(7, 4));\\n\\n// Displays 'Mozill'\\nconsole.log(anyString.substring(0, 6));\\n\\n// Displays 'Mozilla'\\nconsole.log(anyString.substring(0, 7));\\nconsole.log(anyString.substring(0, 10));\\n\\nvar s = \\\"The quick brown fox jumps over the lazy dog.\\\";\\nvar ss = s.substring(10, 15);\\ndocument.write(ss);\\n\\n// Output:\\n// brown\\n</code></pre>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"javaScript Stringprototypesubstring\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/javascript/javascript-stringprototypesubstring/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/javascript/javascript-stringprototypesubstring/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-javascript-javascript-stringprototypesubstring-03ec5355acfe16a2f561.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p>The <code>substring()</code> method returns a subset of a string between one index and another, or through the end of the string.</p>\\n<h2>Syntax</h2>\\n<pre><code>str.substring(indexStart[, indexEnd])\\n</code></pre>\\n<h2>Parameters</h2>\\n<p><strong>indexStart</strong></p>\\n<p>An integer between 0 and the length of the string, specifying the offset into the string of the first character to include in the returned substring.</p>\\n<p><strong>indexEnd</strong></p>\\n<p>Optional. An integer between 0 and the length of the string, which specifies the offset into the string of the first character not to include in the returned substring.</p>\\n<p><a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substring\\\">MDN link</a> | <a href=\\\"https://msdn.microsoft.com/en-us/LIBRary/3cz15ahb(v=vs.94).aspx\\\">MSDN link</a></p>\\n<h2>Description</h2>\\n<p><code>substring()</code> extracts characters from <code>indexStart</code> up to but not including <code>indexEnd</code>. In particular:</p>\\n<ul>\\n<li>If <code>indexStart</code> equals <code>indexEnd</code>, <code>substring()</code> returns an empty string.</li>\\n<li>If <code>indexEnd</code> is omitted, <code>substring()</code> extracts characters to the end of the string.</li>\\n<li>If either argument is less than 0 or is <code>NaN</code>, it is treated as if it were 0.</li>\\n<li>If either argument is greater than <code>stringName.length</code>, it is treated as if it were <code>stringName.length</code>.</li>\\n</ul>\\n<p>If <code>indexStart</code> is greater than <code>indexEnd</code>, then the effect of <code>substring()</code> is as if the two arguments were swapped; for example, <code>str.substring(1, 0) == str.substring(0, 1)</code>.</p>\\n<h2>Examples</h2>\\n<pre><code>var anyString = 'Mozilla';\\n\\n// Displays 'Moz'\\nconsole.log(anyString.substring(0, 3));\\nconsole.log(anyString.substring(3, 0));\\n\\n// Displays 'lla'\\nconsole.log(anyString.substring(4, 7));\\nconsole.log(anyString.substring(7, 4));\\n\\n// Displays 'Mozill'\\nconsole.log(anyString.substring(0, 6));\\n\\n// Displays 'Mozilla'\\nconsole.log(anyString.substring(0, 7));\\nconsole.log(anyString.substring(0, 10));\\n\\nvar s = \\\"The quick brown fox jumps over the lazy dog.\\\";\\nvar ss = s.substring(10, 15);\\ndocument.write(ss);\\n\\n// Output:\\n// brown\\n</code></pre>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"javaScript Stringprototypesubstring\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/javascript/javascript-stringprototypesubstring/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/javascript/javascript-stringprototypesubstring/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-javascript-javascript-stringprototypesubstring.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-javascript-javascript-stringprototypesubstring.json\n// module chunks = 1157"],"sourceRoot":""}