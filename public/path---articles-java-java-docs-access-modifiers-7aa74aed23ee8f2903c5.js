webpackJsonp([1566],{"./node_modules/json-loader/index.js!./.cache/json/articles-java-java-docs-access-modifiers.json":function(e,a){e.exports={data:{markdownRemark:{html:"<h1>Java Access Modifiers</h1>\n<p>Ok, so if <code>modelS</code> has all the same properties, I should be able to access <code>name</code> or <code>manufacturerName</code> right?</p>\n<pre><code>System.out.println(modelS.name);\n</code></pre>\n<p>Results in :</p>\n<pre><code>Main.java:13: error: name has private access in Car\n        System.out.println(modelS.name);\n                                 ^\n1 error\n</code></pre>\n<p>Why? Notice we had mentioned <code>private</code> before the variable <code>name</code> in class <code>Car</code>. This marks the variable as <code>private</code> to the class which means that the variable cannot be modified or accessed from another class, even if an object of the class is instantiated. So, unless you provide a public <code>setter</code> method or any other <code>public</code> method to access the variable, there is no way it's visible to the outside world.</p>\n<p>There are other kinds of access modifiers such as public, protected, default etc.</p>",frontmatter:{title:"Java Docs Access Modifiers",parent:"/home/stuart/guides/src/pages/articles/java/java-docs-access-modifiers/index.md absPath of file"}}},pathContext:{slug:"/articles/java/java-docs-access-modifiers/"}}}});
//# sourceMappingURL=path---articles-java-java-docs-access-modifiers-7aa74aed23ee8f2903c5.js.map