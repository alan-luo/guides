webpackJsonp([1942],{"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-make-object-properties-private.json":function(e,t){e.exports={data:{markdownRemark:{html:'<p>Objects have their own attributes, called <em>properties</em>, and their own functions, called <em>methods</em>.</p>\n<p>You can use the <code>this</code> keyword to reference <em>public properties and methods</em> of the current objects. However, when You need to create private ones so they are not accessible from the outside of the object you just remove the keyword <code>this</code> from the object property or method declaration and declare it with <code>var</code> so that it is private outside its scope.</p>\n<pre><code>var Bike = function() {\n  var speed = 100; // private\n  function addUnit(value) { // private\n    return value + "KM/H";\n  }\n\n  this.getSpeed = function () {  // public\n    return addUnit(speed);\n  };\n\n};\n</code></pre>\n<h2>Another example:</h2>\n<pre><code>var Cake = function() {\n\n  var loot = 2;\n  // Getter to know how much loot you have\n  this.getLoot = function() {\n    return loot;\n  };\n\n  // Setter to change the ammount of loot\n  this.setLoot = function(num){\n    loot = num;\n  };\n</code></pre>',frontmatter:{title:"Make Object Properties Private",parent:"/home/stuart/guides/src/pages/articles/certificates/make-object-properties-private/index.md absPath of file"}}},pathContext:{slug:"/articles/certificates/make-object-properties-private/"}}}});
//# sourceMappingURL=path---articles-certificates-make-object-properties-private-7c1133051e55569d38e3.js.map