{"version":3,"sources":["webpack:///path---articles-javascript-construct-javascript-objects-with-functions-5b5f12a0b0818193269e.js","webpack:///./.cache/json/articles-javascript-construct-javascript-objects-with-functions.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-javascript-construct-javascript-objects-with-functions.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,OAERC,yHACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,0cACAC,aACAC,MAAA,8CACAC,OAAA,4HAIAC,aACAC,KAAA","file":"path---articles-javascript-construct-javascript-objects-with-functions-5b5f12a0b0818193269e.js","sourcesContent":["webpackJsonp([1526],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-javascript-construct-javascript-objects-with-functions.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p>Using constructors it is easy to create new objects using a blueprint or constructor. The declaration syntax is a little different but still easy to remember.</p>\\n<pre><code>// Let's add the properties engines and seats to the car in the same way that the property wheels has been added below. They should both be numbers.\\nvar Car = function() {\\n  this.wheels = 4;\\n  this.engines = 1;\\n  this.seats = 1;\\n};\\n\\nvar myCar = new Car();\\n</code></pre>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Construct JavaScript Objects with Functions\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/javascript/construct-javascript-objects-with-functions/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/javascript/construct-javascript-objects-with-functions/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-javascript-construct-javascript-objects-with-functions-5b5f12a0b0818193269e.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p>Using constructors it is easy to create new objects using a blueprint or constructor. The declaration syntax is a little different but still easy to remember.</p>\\n<pre><code>// Let's add the properties engines and seats to the car in the same way that the property wheels has been added below. They should both be numbers.\\nvar Car = function() {\\n  this.wheels = 4;\\n  this.engines = 1;\\n  this.seats = 1;\\n};\\n\\nvar myCar = new Car();\\n</code></pre>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Construct JavaScript Objects with Functions\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/javascript/construct-javascript-objects-with-functions/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/javascript/construct-javascript-objects-with-functions/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-javascript-construct-javascript-objects-with-functions.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-javascript-construct-javascript-objects-with-functions.json\n// module chunks = 1526"],"sourceRoot":""}