{"version":3,"sources":["webpack:///path---articles-javascript-javascript-for-of-loop-0c5469f34b2a4240a034.js","webpack:///./.cache/json/articles-javascript-javascript-for-of-loop.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-javascript-javascript-for-of-loop.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,OAERC,oGACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,2xDACAC,aACAC,MAAA,yBACAC,OAAA,uGAIAC,aACAC,KAAA","file":"path---articles-javascript-javascript-for-of-loop-0c5469f34b2a4240a034.js","sourcesContent":["webpackJsonp([1476],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-javascript-javascript-for-of-loop.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p>The <code>for..of</code> statement creates a loop iterating over iterable objects (including Array, Map, Set, Arguments object and so on), invoking a custom iteration hook with statements to be executed for the value of each distinct property.</p>\\n<pre><code>for (variable of object) {\\n  statement\\n}\\n</code></pre>\\n<table>\\n<thead>\\n<tr>\\n<th></th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>variable</td>\\n<td>On each iteration a value of a different property is assigned to variable.</td>\\n</tr>\\n<tr>\\n<td>object</td>\\n<td>Object whose enumerable properties are iterated.</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><a href=\\\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/for...of\\\">MDN link</a> | <a href=\\\"https://msdn.microsoft.com/library/dn858238(v=vs.94).aspx?f=255&#x26;MSPPError=-2147217396\\\">MSDN link</a> | <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments/@@iterator\\\">arguments @@iterator</a></p>\\n<h2>Examples</h2>\\n<h3>Array</h3>\\n<pre><code>let arr = [ \\\"fred\\\", \\\"tom\\\", \\\"bob\\\" ];\\n\\nfor (let i of arr) {\\n    console.log(i);\\n}\\n\\n// Output:\\n// fred\\n// tom\\n// bob\\n</code></pre>\\n<h3>Map</h3>\\n<pre><code>var m = new Map();\\nm.set(1, \\\"black\\\");\\nm.set(2, \\\"red\\\");\\n\\nfor (var n of m) {\\nconsole.log(n);\\n}\\n\\n// Output:\\n// 1,black\\n// 2,red\\n</code></pre>\\n<h3>Set</h3>\\n<pre><code>var s = new Set();\\ns.add(1);\\ns.add(\\\"red\\\");\\n\\nfor (var n of s) {\\nconsole.log(n);\\n}\\n\\n// Output:\\n// 1\\n// red\\n</code></pre>\\n<h3>Arguments object</h3>\\n<pre><code>// your browser must support for..of loop\\n// and let-scoped variables in for loops\\n\\nfunction DisplayArgumentsObject()\\n{\\n    for (let n of arguments) {\\n    console.log(n);\\n    }\\n}\\n\\nDisplayArgumentsObject(1,\\\"red\\\");\\n\\n// Output:\\n// 1\\n// red\\n</code></pre>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"JavaScript for of Loop\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/javascript/javascript-for-of-loop/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/javascript/javascript-for-of-loop/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-javascript-javascript-for-of-loop-0c5469f34b2a4240a034.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p>The <code>for..of</code> statement creates a loop iterating over iterable objects (including Array, Map, Set, Arguments object and so on), invoking a custom iteration hook with statements to be executed for the value of each distinct property.</p>\\n<pre><code>for (variable of object) {\\n  statement\\n}\\n</code></pre>\\n<table>\\n<thead>\\n<tr>\\n<th></th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>variable</td>\\n<td>On each iteration a value of a different property is assigned to variable.</td>\\n</tr>\\n<tr>\\n<td>object</td>\\n<td>Object whose enumerable properties are iterated.</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><a href=\\\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/for...of\\\">MDN link</a> | <a href=\\\"https://msdn.microsoft.com/library/dn858238(v=vs.94).aspx?f=255&#x26;MSPPError=-2147217396\\\">MSDN link</a> | <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments/@@iterator\\\">arguments @@iterator</a></p>\\n<h2>Examples</h2>\\n<h3>Array</h3>\\n<pre><code>let arr = [ \\\"fred\\\", \\\"tom\\\", \\\"bob\\\" ];\\n\\nfor (let i of arr) {\\n    console.log(i);\\n}\\n\\n// Output:\\n// fred\\n// tom\\n// bob\\n</code></pre>\\n<h3>Map</h3>\\n<pre><code>var m = new Map();\\nm.set(1, \\\"black\\\");\\nm.set(2, \\\"red\\\");\\n\\nfor (var n of m) {\\nconsole.log(n);\\n}\\n\\n// Output:\\n// 1,black\\n// 2,red\\n</code></pre>\\n<h3>Set</h3>\\n<pre><code>var s = new Set();\\ns.add(1);\\ns.add(\\\"red\\\");\\n\\nfor (var n of s) {\\nconsole.log(n);\\n}\\n\\n// Output:\\n// 1\\n// red\\n</code></pre>\\n<h3>Arguments object</h3>\\n<pre><code>// your browser must support for..of loop\\n// and let-scoped variables in for loops\\n\\nfunction DisplayArgumentsObject()\\n{\\n    for (let n of arguments) {\\n    console.log(n);\\n    }\\n}\\n\\nDisplayArgumentsObject(1,\\\"red\\\");\\n\\n// Output:\\n// 1\\n// red\\n</code></pre>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"JavaScript for of Loop\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/javascript/javascript-for-of-loop/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/javascript/javascript-for-of-loop/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-javascript-javascript-for-of-loop.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-javascript-javascript-for-of-loop.json\n// module chunks = 1476"],"sourceRoot":""}