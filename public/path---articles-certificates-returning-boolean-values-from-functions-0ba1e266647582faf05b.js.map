{"version":3,"sources":["webpack:///path---articles-certificates-returning-boolean-values-from-functions-0ba1e266647582faf05b.js","webpack:///./.cache/json/articles-certificates-returning-boolean-values-from-functions.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-certificates-returning-boolean-values-from-functions.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,OAERC,uHACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,6nBACAC,aACAC,MAAA,0CACAC,OAAA,0HAIAC,aACAC,KAAA","file":"path---articles-certificates-returning-boolean-values-from-functions-0ba1e266647582faf05b.js","sourcesContent":["webpackJsonp([1904],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-returning-boolean-values-from-functions.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p>You may recall from Comparison with the Equality Operator that all comparison operators return a boolean <code>true</code> or <code>false</code> value.</p>\\n<p>A common <code>anti-pattern</code> is to use an <code>if/else</code> statement to do a comparison and then return <code>true/false</code>:</p>\\n<pre><code>function isEqual(a,b) {\\n  if(a === b) {\\n    return true;\\n  } else {\\n    return false;\\n  }\\n}\\n</code></pre>\\n<p>Since <code>===</code> returns <code>true</code> or <code>false</code>, we can simply return the result of the comparison:</p>\\n<pre><code>function isEqual(a,b) {\\n  return a === b;\\n}\\n</code></pre>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Returning Boolean Values from Functions\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/certificates/returning-boolean-values-from-functions/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/certificates/returning-boolean-values-from-functions/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-certificates-returning-boolean-values-from-functions-0ba1e266647582faf05b.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p>You may recall from Comparison with the Equality Operator that all comparison operators return a boolean <code>true</code> or <code>false</code> value.</p>\\n<p>A common <code>anti-pattern</code> is to use an <code>if/else</code> statement to do a comparison and then return <code>true/false</code>:</p>\\n<pre><code>function isEqual(a,b) {\\n  if(a === b) {\\n    return true;\\n  } else {\\n    return false;\\n  }\\n}\\n</code></pre>\\n<p>Since <code>===</code> returns <code>true</code> or <code>false</code>, we can simply return the result of the comparison:</p>\\n<pre><code>function isEqual(a,b) {\\n  return a === b;\\n}\\n</code></pre>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Returning Boolean Values from Functions\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/certificates/returning-boolean-values-from-functions/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/certificates/returning-boolean-values-from-functions/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-certificates-returning-boolean-values-from-functions.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-certificates-returning-boolean-values-from-functions.json\n// module chunks = 1904"],"sourceRoot":""}