webpackJsonp([262],{"./node_modules/json-loader/index.js!./.cache/json/articles-miscellaneous-restrict-access-to-authenticated-users-only.json":function(e,t){e.exports={data:{markdownRemark:{html:"<p>Let's say you have a route that you want to restrict to logged-in users; maybe you have a <code>/profile</code> page that lets your users fill in some information about themselves, but it wouldn't work if they weren't logged in. Open <strong>/client/app/profile/profile.js</strong>, and add <code>authenticate: true</code> to the options passed to <em>$routeProvider.when</em> like so:</p>\n<pre><code>    $routeProvider\n      .when('/profile', {\n        templateUrl: 'app/profile/profile.html',\n        controller: 'ProfileCtrl',\n        authenticate: true // restrict to authenticated users\n      });\n</code></pre>\n<p>This way, if the user isn't authenticated when they try to access the <code>/profile</code> page, they'll be redirected to your login screen to authenticate before continuing to their profile page.</p>",frontmatter:{title:"Restrict Access To Authenticated Users Only",parent:"/home/stuart/guides/src/pages/articles/miscellaneous/restrict-access-to-authenticated-users-only/index.md absPath of file"}}},pathContext:{slug:"/articles/miscellaneous/restrict-access-to-authenticated-users-only/"}}}});
//# sourceMappingURL=path---articles-miscellaneous-restrict-access-to-authenticated-users-only-19cfeb50d0755553e96a.js.map