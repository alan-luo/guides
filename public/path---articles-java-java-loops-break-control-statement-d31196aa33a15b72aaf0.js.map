{"version":3,"sources":["webpack:///path---articles-java-java-loops-break-control-statement-d31196aa33a15b72aaf0.js","webpack:///./.cache/json/articles-java-java-loops-break-control-statement.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-java-java-loops-break-control-statement.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,OAERC,0GACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,+0DACAC,aACAC,MAAA,qCACAC,OAAA,6GAIAC,aACAC,KAAA","file":"path---articles-java-java-loops-break-control-statement-d31196aa33a15b72aaf0.js","sourcesContent":["webpackJsonp([1321],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-java-java-loops-break-control-statement.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<h1>Java break Control Statement</h1>\\n<p>Terminates the loop and starts the execution of the code that immediately follows the loop. If you have nested loops, the <code>break</code> statement will only end the loop in which it is placed.</p>\\n<pre><code>for (int i = 0; i &#x3C; 10; i++) // Loop 1\\n{\\n    for (int j = 0; j &#x3C; 10; j++) // Loop 2\\n    {\\n        if (i == 5 &#x26;&#x26; j == 5)\\n        {\\n            break;\\n            // Will terminate Loop 2, but Loop 1 will keep going\\n        }\\n    }\\n}\\n</code></pre>\\n<p>But if you do want to break out of the outer loop too, you can use a label to exit:</p>\\n<pre><code>loop1: // This is a label\\nfor (int i = 0; i &#x3C; 10; i++) // Loop 1\\n{\\n    for (int j = 0; j &#x3C; 10; j++) // Loop 2\\n    {\\n        if (i == 5 &#x26;&#x26; j == 5)\\n        {\\n            break loop1;\\n            // Will break out of Loop 1, instead of just breaking out of Loop 2\\n        }\\n    }\\n}\\n</code></pre>\\n<p><img src=\\\"//forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=2\\\" alt=\\\":rocket:\\\" title=\\\":rocket:\\\"> <a href=\\\"https://repl.it/CJZA/0\\\">Run Code</a></p>\\n<p><code>break</code> statements can be particulary useful while searching for an element in an array. Using <code>break</code> in the following code improves efficiency as the loop stops as soon as the element we are looking for (<code>searchFor</code>) is found, instead of going on till the end of <code>arrayInts</code> is reached.</p>\\n<pre><code>int j = 0;\\nint[] arrayOfInts = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};\\nint searchFor = 5;\\n\\nfor (int i : arrayOfInts)\\n{\\n    if (arrayOfInts[j] == searchFor)\\n        break;\\n    j++;\\n}\\n\\nSystem.out.println(\\\"j = \\\" + j);\\n</code></pre>\\n<p><img src=\\\"//forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=2\\\" alt=\\\":rocket:\\\" title=\\\":rocket:\\\"> <a href=\\\"https://repl.it/CJZC/0\\\">Run Code</a></p>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Java Loops Break Control Statement\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/java/java-loops-break-control-statement/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/java/java-loops-break-control-statement/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-java-java-loops-break-control-statement-d31196aa33a15b72aaf0.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<h1>Java break Control Statement</h1>\\n<p>Terminates the loop and starts the execution of the code that immediately follows the loop. If you have nested loops, the <code>break</code> statement will only end the loop in which it is placed.</p>\\n<pre><code>for (int i = 0; i &#x3C; 10; i++) // Loop 1\\n{\\n    for (int j = 0; j &#x3C; 10; j++) // Loop 2\\n    {\\n        if (i == 5 &#x26;&#x26; j == 5)\\n        {\\n            break;\\n            // Will terminate Loop 2, but Loop 1 will keep going\\n        }\\n    }\\n}\\n</code></pre>\\n<p>But if you do want to break out of the outer loop too, you can use a label to exit:</p>\\n<pre><code>loop1: // This is a label\\nfor (int i = 0; i &#x3C; 10; i++) // Loop 1\\n{\\n    for (int j = 0; j &#x3C; 10; j++) // Loop 2\\n    {\\n        if (i == 5 &#x26;&#x26; j == 5)\\n        {\\n            break loop1;\\n            // Will break out of Loop 1, instead of just breaking out of Loop 2\\n        }\\n    }\\n}\\n</code></pre>\\n<p><img src=\\\"//forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=2\\\" alt=\\\":rocket:\\\" title=\\\":rocket:\\\"> <a href=\\\"https://repl.it/CJZA/0\\\">Run Code</a></p>\\n<p><code>break</code> statements can be particulary useful while searching for an element in an array. Using <code>break</code> in the following code improves efficiency as the loop stops as soon as the element we are looking for (<code>searchFor</code>) is found, instead of going on till the end of <code>arrayInts</code> is reached.</p>\\n<pre><code>int j = 0;\\nint[] arrayOfInts = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};\\nint searchFor = 5;\\n\\nfor (int i : arrayOfInts)\\n{\\n    if (arrayOfInts[j] == searchFor)\\n        break;\\n    j++;\\n}\\n\\nSystem.out.println(\\\"j = \\\" + j);\\n</code></pre>\\n<p><img src=\\\"//forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=2\\\" alt=\\\":rocket:\\\" title=\\\":rocket:\\\"> <a href=\\\"https://repl.it/CJZC/0\\\">Run Code</a></p>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Java Loops Break Control Statement\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/java/java-loops-break-control-statement/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/java/java-loops-break-control-statement/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-java-java-loops-break-control-statement.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-java-java-loops-break-control-statement.json\n// module chunks = 1321"],"sourceRoot":""}