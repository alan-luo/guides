webpackJsonp([197],{"./node_modules/json-loader/index.js!./.cache/json/articles-python-python-comparisons.json":function(e,t){e.exports={data:{markdownRemark:{html:'<p><a href="https://docs.python.org/3/library/stdtypes.html#comparisons">Python Docs - Comparisions</a></p>\n<p>There are eight comparison operations in Python. They all have the same priority (which is higher than that of the Boolean operations). Comparisons can be chained arbitrarily; for example, <code>x &#x3C; y &#x3C;= z</code> is equivalent to <code>x &#x3C; y and y &#x3C;= z</code>, except that <code>y</code> is evaluated only once (but in both cases <code>z</code> is not evaluated at all when <code>x &#x3C; y</code> is found to be false).</p>\n<p>This table summarizes the comparison operations:</p>\n<table>\n<thead>\n<tr>\n<th>Operation</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>&#x3C;</code></td>\n<td>strictly less than</td>\n</tr>\n<tr>\n<td><code>&#x3C;=</code></td>\n<td>less than or equal</td>\n</tr>\n<tr>\n<td><code>></code></td>\n<td>strictly greater than</td>\n</tr>\n<tr>\n<td><code>>=</code></td>\n<td>greater than or equal</td>\n</tr>\n<tr>\n<td><code>==</code></td>\n<td>equal</td>\n</tr>\n<tr>\n<td><code>!=</code></td>\n<td>not equal</td>\n</tr>\n<tr>\n<td><code>is</code></td>\n<td>object identity</td>\n</tr>\n<tr>\n<td><code>is not</code></td>\n<td>negated object identity</td>\n</tr>\n</tbody>\n</table>\n<p>Objects of different types, except different numeric types, never compare equal. Furthermore, some types (for example, function objects) support only a degenerate notion of comparison where any two objects of that type are unequal. The <code>&#x3C;</code>, <code>&#x3C;=</code>, <code>></code> and <code>>=</code> operators will raise a <code>TypeError</code> exception when comparing a complex number with another built-in numeric type, when the objects are of different types that cannot be compared, or in other cases where there is no defined ordering.</p>\n<p>Non-identical instances of a class normally compare as non-equal unless the class defines the <code>__eq__()</code> method.</p>\n<p>Instances of a class cannot be ordered with respect to other instances of the same class, or other types of object, unless the class defines enough of the methods <code>__lt__()</code>, <code>__le__()</code>, <code>__gt__()</code>, and <code>__ge__()</code> (in general, <code>__lt__()</code> and <code>__eq__()</code> are sufficient, if you want the conventional meanings of the comparison operators).</p>\n<p>The behavior of the is and is not operators cannot be customized; also they can be applied to any two objects and never raise an exception.</p>\n<p><strong>TODO</strong></p>\n<ul>\n<li>Chained comparisons w &#x3C; x &#x3C; y > z</li>\n<li>Equality comparison <code>is</code> vs <code>==</code></li>\n</ul>',frontmatter:{title:"Python Comparisons",parent:"/home/stuart/guides/src/pages/articles/python/python-comparisons/index.md absPath of file"}}},pathContext:{slug:"/articles/python/python-comparisons/"}}}});
//# sourceMappingURL=path---articles-python-python-comparisons-b2a710183da39698e59a.js.map