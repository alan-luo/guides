{"version":3,"sources":["webpack:///path---articles-certificates-return-a-value-from-a-function-with-return-e7485350034454666917.js","webpack:///./.cache/json/articles-certificates-return-a-value-from-a-function-with-return.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-certificates-return-a-value-from-a-function-with-return.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,OAERC,0HACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,gtBACAC,aACAC,MAAA,6CACAC,OAAA,6HAIAC,aACAC,KAAA","file":"path---articles-certificates-return-a-value-from-a-function-with-return-e7485350034454666917.js","sourcesContent":["webpackJsonp([1907],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-return-a-value-from-a-function-with-return.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p>We can pass values into a function with <code>arguments</code>. You can use a <code>return</code> statement to send a value back out of a function.</p>\\n<h2>Example</h2>\\n<pre><code>function plusThree(num) {\\n  return num + 3;\\n}\\nvar answer = plusThree(5); // 8\\n</code></pre>\\n<p><code>plusThree</code> takes an <code>argument</code> for <code>num</code> and returns a value equal to <code>num + 3</code>.</p>\\n<p>A <code>return</code> statement will also end the execution of it's parent function. Hence, any statements inside a function scope after a <code>return</code> statement will not be executed. In case of multiple <code>return</code> statements in a function, only the first one will get executed.</p>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Return a Value from a Function with Return\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/certificates/return-a-value-from-a-function-with-return/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/certificates/return-a-value-from-a-function-with-return/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-certificates-return-a-value-from-a-function-with-return-e7485350034454666917.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p>We can pass values into a function with <code>arguments</code>. You can use a <code>return</code> statement to send a value back out of a function.</p>\\n<h2>Example</h2>\\n<pre><code>function plusThree(num) {\\n  return num + 3;\\n}\\nvar answer = plusThree(5); // 8\\n</code></pre>\\n<p><code>plusThree</code> takes an <code>argument</code> for <code>num</code> and returns a value equal to <code>num + 3</code>.</p>\\n<p>A <code>return</code> statement will also end the execution of it's parent function. Hence, any statements inside a function scope after a <code>return</code> statement will not be executed. In case of multiple <code>return</code> statements in a function, only the first one will get executed.</p>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Return a Value from a Function with Return\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/certificates/return-a-value-from-a-function-with-return/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/certificates/return-a-value-from-a-function-with-return/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-certificates-return-a-value-from-a-function-with-return.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-certificates-return-a-value-from-a-function-with-return.json\n// module chunks = 1907"],"sourceRoot":""}