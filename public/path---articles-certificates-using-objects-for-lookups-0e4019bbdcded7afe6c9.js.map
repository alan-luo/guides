{"version":3,"sources":["webpack:///path---articles-certificates-using-objects-for-lookups-0e4019bbdcded7afe6c9.js","webpack:///./.cache/json/articles-certificates-using-objects-for-lookups.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-certificates-using-objects-for-lookups.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,OAERC,yGACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,shBACAC,aACAC,MAAA,4BACAC,OAAA,4GAIAC,aACAC,KAAA","file":"path---articles-certificates-using-objects-for-lookups-0e4019bbdcded7afe6c9.js","sourcesContent":["webpackJsonp([2042],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-using-objects-for-lookups.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p>Objects can be thought of as a key/value storage, like a dictionary. If you have tabular data, you can use an object to \\\"lookup\\\" values rather than a <code>switch</code> statement or an <code>if/else</code> chain. This is most useful when you know that your input data is limited to a certain range.</p>\\n<p>Here is an example of a simple reverse alphabet lookup:</p>\\n<pre><code>var alpha = {\\n  1:\\\"Z\\\",\\n  2:\\\"Y\\\",\\n  3:\\\"X\\\",\\n  4:\\\"W\\\",\\n  ...\\n  24:\\\"C\\\",\\n  25:\\\"B\\\",\\n  26:\\\"A\\\"\\n};\\nalpha[2]; // \\\"Y\\\"\\nalpha[24]; // \\\"C\\\"\\n</code></pre>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Using Objects for Lookups\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/certificates/using-objects-for-lookups/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/certificates/using-objects-for-lookups/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-certificates-using-objects-for-lookups-0e4019bbdcded7afe6c9.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p>Objects can be thought of as a key/value storage, like a dictionary. If you have tabular data, you can use an object to \\\"lookup\\\" values rather than a <code>switch</code> statement or an <code>if/else</code> chain. This is most useful when you know that your input data is limited to a certain range.</p>\\n<p>Here is an example of a simple reverse alphabet lookup:</p>\\n<pre><code>var alpha = {\\n  1:\\\"Z\\\",\\n  2:\\\"Y\\\",\\n  3:\\\"X\\\",\\n  4:\\\"W\\\",\\n  ...\\n  24:\\\"C\\\",\\n  25:\\\"B\\\",\\n  26:\\\"A\\\"\\n};\\nalpha[2]; // \\\"Y\\\"\\nalpha[24]; // \\\"C\\\"\\n</code></pre>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Using Objects for Lookups\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/certificates/using-objects-for-lookups/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/certificates/using-objects-for-lookups/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-certificates-using-objects-for-lookups.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-certificates-using-objects-for-lookups.json\n// module chunks = 2042"],"sourceRoot":""}