webpackJsonp([1158],{"./node_modules/json-loader/index.js!./.cache/json/articles-javascript-javascript-stringprototypesubstr.json":function(t,e){t.exports={data:{markdownRemark:{html:"<p>Gets a substring beginning at the specified location and having the specified length.</p>\n<h2>Syntax</h2>\n<pre><code>str.substr(start[, length])\n</code></pre>\n<h2>Parameters</h2>\n<p><strong>start</strong></p>\n<p>Location at which to begin extracting characters. If a negative number is given, it is treated as strLength + start where strLength is the length of the string (for example, if start is -3 it is treated as strLength - 3.)</p>\n<p><strong>length</strong></p>\n<p>Optional. The number of characters to extract.</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substr\">MDN link</a> | <a href=\"https://msdn.microsoft.com/en-us/LIBRary/0esxc5wy(v=vs.94).aspx\">MSDN link</a></p>\n<h2>Returns</h2>\n<p>The characters in a string beginning at the specified location through the specified number of characters.</p>\n<h2>Description</h2>\n<p><code>start</code> is a character index. The index of the first character is 0, and the index of the last character is 1 less than the length of the string. <code>substr()</code> begins extracting characters at start and collects length characters (unless it reaches the end of the string first, in which case it will return fewer).</p>\n<p>If <code>start</code> is positive and is greater than or equal to the length of the string, <code>substr()</code> returns an empty string.</p>\n<p>If <code>start</code> is negative, <code>substr()</code> uses it as a character index from the end of the string. If <code>start</code> is negative and <code>abs(start)</code> is larger than the length of the string, <code>substr()</code> uses 0 as the start index. Note: the described handling of negative values of the start argument is not supported by Microsoft JScript.</p>\n<p>If <code>length</code> is 0 or negative, <code>substr()</code> returns an empty string. If length is omitted, <code>substr()</code> extracts characters to the end of the string.</p>\n<h2>Examples</h2>\n<pre><code>var str = 'abcdefghij';\n\nconsole.log('(1, 2): '   + str.substr(1, 2));   // '(1, 2): bc'\nconsole.log('(-3, 2): '  + str.substr(-3, 2));  // '(-3, 2): hi'\nconsole.log('(-3): '     + str.substr(-3));     // '(-3): hij'\nconsole.log('(1): '      + str.substr(1));      // '(1): bcdefghij'\nconsole.log('(-20, 2): ' + str.substr(-20, 2)); // '(-20, 2): ab'\nconsole.log('(20, 2): '  + str.substr(20, 2));  // '(20, 2): '\n\nvar s = \"The quick brown fox jumps over the lazy dog.\";\nvar ss = s.substr(10, 5);  \ndocument.write(\"[\" + ss + \"] &#x3C;br>\");\n\nss = s.substr(10);\ndocument.write(\"[\" + ss + \"] &#x3C;br>\");\n\nss = s.substr(10, -5);\ndocument.write(\"[\" + ss + \"] &#x3C;br>\");\n\n// Output:\n// [brown] \n// [brown fox jumps over the lazy dog.] \n// []\n</code></pre>",frontmatter:{title:"javaScript Stringprototypesubstr",parent:"/home/stuart/guides/src/pages/articles/javascript/javascript-stringprototypesubstr/index.md absPath of file"}}},pathContext:{slug:"/articles/javascript/javascript-stringprototypesubstr/"}}}});
//# sourceMappingURL=path---articles-javascript-javascript-stringprototypesubstr-8237fa8bdcef53f6975c.js.map