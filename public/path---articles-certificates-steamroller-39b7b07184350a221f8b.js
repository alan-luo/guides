webpackJsonp([2103],{"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-steamroller.json":function(e,t){e.exports={data:{markdownRemark:{html:'<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/triangular_flag_on_post.png?v=3" alt=":triangular_flag_on_post:" title=":triangular_flag_on_post:"> Remember to use <a><strong><code>Read-Search-Ask</code></strong></a> if you get stuck. Try to pair program <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/busts_in_silhouette.png?v=3" alt=":busts_in_silhouette:" title=":busts_in_silhouette:"> and write your own code <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/pencil.png?v=3" alt=":pencil:" title=":pencil:"></p>\n<h3><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/checkered_flag.png?v=3" alt=":checkered_flag:" title=":checkered_flag:"> Problem Explanation:</h3>\n<p>This problem seems simple but you need to make sure to flatten any array, regardless of the level which is what adds a bit of difficulty to the problem.</p>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-isarray/14284">Array.isArray()</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" alt=":speech_balloon:" title=":speech_balloon:"> Hint: 1</h2>\n<p>You need to check if an element is an array or not.</p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" alt=":speech_balloon:" title=":speech_balloon:"> Hint: 2</h2>\n<p>If you are dealing with an array, then you need flatten it by getting the value inside of the array. This means if you have [[4]] then instead of returning [4] you need to return 4. If you get [[[4]]] then the same, you want the 4. You can access it with arr<a href="">index1</a> to go a level deeper.</p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" alt=":speech_balloon:" title=":speech_balloon:"> Hint: 3</h2>\n<p>You will definitely need recursion or another way to go beyond two level arrays to make the code flexible and not hard-coded to the answers needed. Have fun!</p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2>Spoiler Alert!</h2>\n<p><img src="//discourse-user-assets.s3.amazonaws.com/original/2X/2/2d6c412a50797771301e7ceabd554cef4edcd74d.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></p>\n<p><strong>Solution ahead!</strong></p>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/beginner.png?v=3" alt=":beginner:" title=":beginner:"> Basic Code Solution:</h2>\n<pre><code>function steamrollArray(arr) {\n  var flattenedArray = [];\n\n  // Create function that adds an element if it is not an array.\n  // If it is an array, then loops through it and uses recursion on that array.\n  var flatten = function(arg) {\n    if (!Array.isArray(arg)) {\n      flattenedArray.push(arg);\n    } else {\n      for (var a in arg) {\n        flatten(arg[a]);\n      }\n    }\n  };\n\n  // Call the function for each element in the array\n  arr.forEach(flatten);\n  return flattenedArray;\n}\n\n// test here\nsteamrollArray([1, [2], [3, [[4]]]]);\n</code></pre>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/CLnh/0">Run Code</a></p>\n<h3>Code Explanation:</h3>\n<ul>\n<li>Create a new variable to keep flattened arrays.</li>\n<li>Create a function that will add non array elements to the new variable, and for the ones that are array it loops through them to get the element.</li>\n<li>It does that by using recursion, if the element is an array then call the function again with a layer of array deeper to check if it is an array or not. if it is not then push that non-array element to the variable that gets returned. Otherwise, keep going deeper.</li>\n<li>Invoke the function, the first time you will always pass it an array, so it always fall in to the isArray branch</li>\n<li>Return the flattened array.</li>\n</ul>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-prototype-push/14298">Array.push()</a></li>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-prototype-foreach/14290">Array.forEach()</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/sunflower.png?v=3" alt=":sunflower:" title=":sunflower:"> Intermediate Code Solution:</h2>\n<pre><code>function steamrollArray(arr) {\n  let flat = [].concat(...arr);\n  return flat.some(Array.isArray) ? steamrollArray(flat) : flat;\n}\n\nflattenArray([1, [2], [3, [[4]]]]);\n</code></pre>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/CLni/0">Run Code</a></p>\n<h3>Code Explanation:</h3>\n<ul>\n<li>Use spread operator to concatenate each element of <code>arr</code> with an empty array</li>\n<li>Use <code>Array.some()</code> method to find out if the new array contains an array still</li>\n<li>If it does, use recursion call <code>steamrollArray</code> again, passing in the new array to repeat the process on the arrays that were deeply nested</li>\n<li>If it does not, return the flattened array</li>\n</ul>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some">Array.some</a></li>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-prototype-concat/14286">Array.concat</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator">Spread operator</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator">Ternary Operator (<code>condition ? a : b</code>)</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rotating_light.png?v=3" alt=":rotating_light:" title=":rotating_light:"> Advanced Code Solution:</h2>\n<pre><code>function steamrollArray(arr) {\n  return arr.toString()\n    .replace(\',,\', \',\')       // "1,2,,3" => "1,2,3"\n    .split(\',\')               // [\'1\',\'2\',\'3\']\n    .map(function(v) {\n      if (v == \'[object Object]\') { // bring back empty objects\n        return {};\n      } else if (isNaN(v)) {        // if not a number (string)\n        return v;\n      } else {\n        return parseInt(v);         // if a number in a string, convert it\n      }\n    });\n}\n</code></pre>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/CpDy/4">Run Code</a></p>\n<h3>Code Explanation:</h3>\n<ul>\n<li>First we turn the array to a string, which will give us a string of numbers seperated by a comma, double comma if there was an empty array and literal object text if there was an object, which we can fix it later in our if statement.</li>\n<li>We replace the double comma with one, then split it back into an array.</li>\n<li>map through the array and fix object values and convert string numbers to regular numbers.</li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/clipboard.png?v=3" alt=":clipboard:" title=":clipboard:"> NOTES FOR CONTRIBUTIONS:</h2>\n<ul>\n<li><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3" alt=":warning:" title=":warning:"> <strong>DO NOT</strong> add solutions that are similar to any existing solutions. If you think it is <strong><em>similar but better</em></strong>, then try to merge (or replace) the existing similar solution.</li>\n<li>Add an explanation of your solution.</li>\n<li>Categorize the solution in one of the following categories â€” <strong>Basic</strong>, <strong>Intermediate</strong> and <strong>Advanced</strong>. <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/traffic_light.png?v=3" alt=":traffic_light:" title=":traffic_light:"></li>\n</ul>\n<blockquote>\n<p>See <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/point_right.png?v=3" alt=":point_right:" title=":point_right:"> <a href="http://forum.freecodecamp.com/t/algorithm-article-template/14272"><strong><code>Wiki Challenge Solution Template</code></strong></a> for reference.</p>\n</blockquote>',frontmatter:{title:"Steamroller",parent:"/home/stuart/guides/src/pages/articles/certificates/steamroller/index.md absPath of file"}}},pathContext:{slug:"/articles/certificates/steamroller/"}}}});
//# sourceMappingURL=path---articles-certificates-steamroller-39b7b07184350a221f8b.js.map