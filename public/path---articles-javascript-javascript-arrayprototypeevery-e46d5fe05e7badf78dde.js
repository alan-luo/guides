webpackJsonp([1243],{"./node_modules/json-loader/index.js!./.cache/json/articles-javascript-javascript-arrayprototypeevery.json":function(e,n){e.exports={data:{markdownRemark:{html:'<p>The <code>every()</code> method tests whether all elements in the array pass the test implemented by the provided function.</p>\n<p><strong>Syntax</strong></p>\n<pre><code>arr.every(callback[, thisArg])\n</code></pre>\n<h2>Parameters</h2>\n<ul>\n<li>\n<p><strong>callback</strong> Function to test for each element, taking three arguments:</p>\n<ul>\n<li><strong>currentValue</strong> (required)</li>\n</ul>\n<pre><code>The current element being processed in the array.\n</code></pre>\n</li>\n<li>\n<p><strong>index</strong> (optional)</p>\n<pre><code>The index of the current element being processed in the array.\n</code></pre>\n</li>\n<li>\n<p><strong>array</strong> (optional)</p>\n<pre><code>The array every was called upon.\n</code></pre>\n<ul>\n<li><strong>thisArg</strong> Optional. Value to use as this when executing callback.</li>\n</ul>\n</li>\n</ul>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every">MDN link</a> | <a href="https://msdn.microsoft.com/en-us/LIBRary/ff679981(v=vs.94).aspx">MSDN link</a></p>\n<h2>Description</h2>\n<p>The <code>every</code> method calls the <code>callback</code> function one time for each array element, in ascending index order, until the <code>callback</code> function returns false. If an element that causes <code>callback</code> to return false is found, the every method immediately returns <code>false</code>. Otherwise, the every method returns <code>true</code>.</p>\n<p>The callback function is not called for missing elements of the array.</p>\n<p>In addition to array objects, the every method can be used by any object that has a length property and that has numerically indexed property names. <code>every</code> does not mutate the array on which it is called.</p>\n<h2>Examples</h2>\n<pre><code>function isBigEnough(element, index, array) {\n  return element >= 10;\n}\n[12, 5, 8, 130, 44].every(isBigEnough);   // false\n[12, 54, 18, 130, 44].every(isBigEnough); // true\n\n// Define the callback function.\nfunction CheckIfEven(value, index, ar) {\n    document.write(value + " ");\n\n    if (value % 2 == 0)\n        return true;\n    else\n        return false;\n}\n\n// Create an array.\nvar numbers = [2, 4, 5, 6, 8];\n\n// Check whether the callback function returns true for all of the\n// array values.\nif (numbers.every(CheckIfEven))\n    document.write("All are even.");\nelse\n    document.write("Some are not even.");\n\n// Output:\n// 2 4 5 Some are not even.\n</code></pre>',frontmatter:{title:"javaScript Arrayprototypeevery",parent:"/home/stuart/guides/src/pages/articles/javascript/javascript-arrayprototypeevery/index.md absPath of file"}}},pathContext:{slug:"/articles/javascript/javascript-arrayprototypeevery/"}}}});
//# sourceMappingURL=path---articles-javascript-javascript-arrayprototypeevery-e46d5fe05e7badf78dde.js.map