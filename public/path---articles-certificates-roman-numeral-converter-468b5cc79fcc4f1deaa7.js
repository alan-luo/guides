webpackJsonp([2123],{"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-roman-numeral-converter.json":function(e,n){e.exports={data:{markdownRemark:{html:'<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/triangular_flag_on_post.png?v=3" alt=":triangular_flag_on_post:" title=":triangular_flag_on_post:"> Remember to use <a><strong><code>Read-Search-Ask</code></strong></a> if you get stuck. Try to pair program <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/busts_in_silhouette.png?v=3" alt=":busts_in_silhouette:" title=":busts_in_silhouette:"> and write your own code <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/pencil.png?v=3" alt=":pencil:" title=":pencil:"></p>\n<h3><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/checkered_flag.png?v=3" alt=":checkered_flag:" title=":checkered_flag:"> Problem Explanation:</h3>\n<p>You will create a program that converts an integer to a Roman Numeral.</p>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="http://www.mathsisfun.com/roman-numerals.html">Roman Numerals</a></li>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-prototype-splice/14307">Array.splice()</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf">Array.indexOf()</a></li>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-prototype-join/14292">Array.join()</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" alt=":speech_balloon:" title=":speech_balloon:"> Hint: 1</h2>\n<p>Creating two arrays, one with the Roman Numerals and one with the decimal equivalent for the new forms will be very helpful.</p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" alt=":speech_balloon:" title=":speech_balloon:"> Hint: 2</h2>\n<p>If you add the numbers to the arrays that go before the new letter is introduced, like values for 4, 9, and 40, it will save you plenty of code.</p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" alt=":speech_balloon:" title=":speech_balloon:"> Hint: 3</h2>\n<p>You can\'t have more than three consecutive Roman numerals together.</p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2>Spoiler Alert!</h2>\n<p><img src="//discourse-user-assets.s3.amazonaws.com/original/2X/2/2d6c412a50797771301e7ceabd554cef4edcd74d.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></p>\n<p><strong>Solution ahead!</strong></p>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/beginner.png?v=3" alt=":beginner:" title=":beginner:"> Basic Code Solution:</h2>\n<pre><code>var convertToRoman = function(num) {\n\n  var decimalValue = [ 1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1 ];\n  var romanNumeral = [ \'M\', \'CM\', \'D\', \'CD\', \'C\', \'XC\', \'L\', \'XL\', \'X\', \'IX\', \'V\', \'IV\', \'I\' ];\n\n  var romanized = \'\';\n\n  for (var index = 0; index &#x3C; decimalValue.length; index++) {\n    while (decimalValue[index] &#x3C;= num) {\n      romanized += romanNumeral[index];\n      num -= decimalValue[index];\n    }\n  }\n\n  return romanized;\n}\n\n// test here\nconvertToRoman(36);\n</code></pre>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/CLmf/0">Run Code</a></p>\n<h3>Code Explanation:</h3>\n<ul>\n<li>We start off by creating two arrays with default conversion with matching indices. These are called <code>decimalValue</code> and <code>romanNumeral</code>. We also create an empty string variable, <code>romanized</code>, which will house the final roman number.</li>\n<li>Using a for loop, we loop through the indicies of the <code>decimalValue</code> array. We continue to loop until while the value at the current <code>index</code> will fit into <code>num</code>.</li>\n<li>Next, we add the roman numeral and decrease <code>num</code> by the decimal equivalent.</li>\n<li>Finally, we return the value of <code>romanized</code>.</li>\n</ul>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="http://forum.freecodecamp.com/t/javascript-for-loop/14666">For Loops</a></li>\n<li><a>While Loops</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/sunflower.png?v=3" alt=":sunflower:" title=":sunflower:"> Intermediate Code Solution:</h2>\n<pre><code>function convertToRoman(num) {\n var romans = ["I", "V", "X", "L", "C", "D", "M"],\n     ints = [],\n     romanNumber = [],\n     numeral = "";\n  while (num) {\n    ints.push(num % 10);\n    num = Math.floor(num/10);\n  }\n  for (i=0; i&#x3C;ints.length; i++){\n      units(ints[i]);\n  }\n  function units(){\n    numeral = romans[i*2];\n    switch(ints[i]) {\n      case 1:\n        romanNumber.push(numeral);\n        break;\n      case 2:\n        romanNumber.push(numeral.concat(numeral));\n        break;\n      case 3:\n        romanNumber.push(numeral.concat(numeral).concat(numeral));\n        break;\n      case 4:\n        romanNumber.push(numeral.concat(romans[(i*2)+1]));\n        break;\n      case 5:\n        romanNumber.push(romans[(i*2)+1]);\n        break;\n      case 6:\n        romanNumber.push(romans[(i*2)+1].concat(numeral));\n        break;\n      case 7:\n        romanNumber.push(romans[(i*2)+1].concat(numeral).concat(numeral));\n        break;\n      case 8:\n        romanNumber.push(romans[(i*2)+1].concat(numeral).concat(numeral).concat(numeral));\n        break;\n      case 9:\n        romanNumber.push(romans[i*2].concat(romans[(i*2)+2]));\n      }\n    }\n  return romanNumber.reverse().join("").toString();\n}\n\n// test here\nconvertToRoman(97);\n</code></pre>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/C1YV">Run Code</a></p>\n<h3>Code Explanation:</h3>\n<ul>\n<li>Create an array of Roman Numerals (<code>romans</code>).</li>\n<li>Use a for loop to create an array of the digits (<code>ints</code>) in the number.</li>\n<li>Loop through the array of digits (base 10) and as you do, increment the Roman Numeral (base 5) index by 2 (<code>numeral = romans[i*2]</code>).</li>\n<li>Within the loop, use Switch Case to push the proper Roman Numerals (backwards) onto that array.</li>\n<li>Reverse the Roman Numerals array and turn it into a string.</li>\n</ul>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="http://forum.freecodecamp.com/t/javascript-for-loop/14666">For Loops</a></li>\n<li><a>While Loops</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math">Math</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/sunflower.png?v=3" alt=":sunflower:" title=":sunflower:"> Intermediate Code Solution:</h2>\n<pre><code>function convertToRoman(num) {\n  var romans = [\n  // 10^i 10^i*5\n    ["I", "V"], // 10^0\n    ["X", "L"], // 10^1\n    ["C", "D"], // 10^2\n    ["M"]       // 10^3\n  ],\n      digits = num.toString()\n        .split(\'\')\n        .reverse()\n        .map(function(item, index) {\n          return parseInt(item);\n        }),\n      numeral = "";\n\n  // Loop through each digit, starting with the ones place\n  for (var i=0; i&#x3C;digits.length; i++) {\n    // Make a Roman numeral that ignores 5-multiples and shortening rules\n    numeral = romans[i][0].repeat(digits[i]) + numeral;\n    // Check for a Roman numeral 5-multiple version\n    if (romans[i][1]) {\n      numeral = numeral\n        // Change occurrences of 5 * 10^i to the corresponding 5-multiple Roman numeral\n        .replace(romans[i][0].repeat(5), romans[i][1])\n        // Shorten occurrences of 9 * 10^i\n        .replace(romans[i][1] + romans[i][0].repeat(4), romans[i][0] + romans[i+1][0])\n        // Shorten occurrences of 4 * 10^i\n        .replace(romans[i][0].repeat(4), romans[i][0] + romans[i][1]);\n    }\n  }\n\n  return numeral;\n}\n\n// test here\nconvertToRoman(36);\n</code></pre>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/C1YV">Run Code</a></p>\n<h3>Code Explanation:</h3>\n<ul>\n<li>Use an array (<code>romans</code>) to create a matrix containing the Roman numeral for a given power of 10 and, if available, the Roman numeral for that power of 10 times 5.</li>\n<li>Convert the input number (<code>num</code>) to a reversed array of digits (<code>digits</code>) so that we can loop through those digits starting with the ones position and going up.</li>\n<li>Loop through each digit, starting with the ones place, and create a Roman numeral string by adding each higher-power Roman numeral to the start of the <code>numeral</code> string a number of times equal to <code>digit</code>. This initial string ignores the Roman numerals that are a power of 10 times 5 and also ignores shortening rules.</li>\n<li>If the relevant power of 10 has a 5-multiple Roman numeral, in <code>numeral</code>, replace 5-in-a-row occurrences with the relevant 5-multiple Roman numeral (i.e., V, L, or D) and shorten occurrences of 9 * 10^i (e.g., VIIII to VIX) and 4 * 10^i (e.g., XXXX to XL). Order is important here!</li>\n<li>Finally, return <code>numeral</code>.</li>\n</ul>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="http://forum.freecodecamp.com/t/javascript-for-loop/14666">For Loops</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split">.split()</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse">.reverse()</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map">.map()</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString">.toString()</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt">parseInt()</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace">.replace()</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat">.repeat()</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/clipboard.png?v=3" alt=":clipboard:" title=":clipboard:"> NOTES FOR CONTRIBUTIONS:</h2>\n<ul>\n<li><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3" alt=":warning:" title=":warning:"> <strong>DO NOT</strong> add solutions that are similar to any existing solutions. If you think it is <strong><em>similar but better</em></strong>, then try to merge (or replace) the existing similar solution.</li>\n<li>Add an explanation of your solution.</li>\n<li>Categorize the solution in one of the following categories — <strong>Basic</strong>, <strong>Intermediate</strong> and <strong>Advanced</strong>. <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/traffic_light.png?v=3" alt=":traffic_light:" title=":traffic_light:"></li>\n<li>Please add your username only if you have added any <strong>relevant main contents</strong>. (<img src="https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3" alt=":warning:" title=":warning:"> <strong><em>DO NOT</em></strong> <em>remove any existing usernames</em>)</li>\n</ul>\n<blockquote>\n<p>See <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/point_right.png?v=3" alt=":point_right:" title=":point_right:"> <a href="http://forum.freecodecamp.com/t/algorithm-article-template/14272"><strong><code>Wiki Challenge Solution Template</code></strong></a> for reference.</p>\n</blockquote>',frontmatter:{title:"Roman Numeral Converter",parent:"/home/stuart/guides/src/pages/articles/certificates/roman-numeral-converter/index.md absPath of file"}}},pathContext:{slug:"/articles/certificates/roman-numeral-converter/"}}}});
//# sourceMappingURL=path---articles-certificates-roman-numeral-converter-468b5cc79fcc4f1deaa7.js.map