{"version":3,"sources":["webpack:///path---articles-certificates-render-images-from-data-sources-16a68be764b5d72f0490.js","webpack:///./.cache/json/articles-certificates-render-images-from-data-sources.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-certificates-render-images-from-data-sources.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,OAERC,+GACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,8XACAC,aACAC,MAAA,kCACAC,OAAA,kHAIAC,aACAC,KAAA","file":"path---articles-certificates-render-images-from-data-sources-16a68be764b5d72f0490.js","sourcesContent":["webpackJsonp([1906],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-render-images-from-data-sources.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p>Obtaining image links from JSON objects has been explained already. However, how do you present that image as an actual image requires a bit of ingenuity, yet it is simple even if you don't figure it out yourself. You have to generate html using the variable to complete the link like this:</p>\\n<pre><code>html += \\\"&#x3C;img src = '\\\" + val.imageLink + \\\"'>\\\";\\n</code></pre>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Render Images From Data Sources\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/certificates/render-images-from-data-sources/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/certificates/render-images-from-data-sources/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-certificates-render-images-from-data-sources-16a68be764b5d72f0490.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p>Obtaining image links from JSON objects has been explained already. However, how do you present that image as an actual image requires a bit of ingenuity, yet it is simple even if you don't figure it out yourself. You have to generate html using the variable to complete the link like this:</p>\\n<pre><code>html += \\\"&#x3C;img src = '\\\" + val.imageLink + \\\"'>\\\";\\n</code></pre>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Render Images From Data Sources\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/certificates/render-images-from-data-sources/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/certificates/render-images-from-data-sources/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-certificates-render-images-from-data-sources.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-certificates-render-images-from-data-sources.json\n// module chunks = 1906"],"sourceRoot":""}