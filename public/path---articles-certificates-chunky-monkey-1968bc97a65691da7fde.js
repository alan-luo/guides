webpackJsonp([2034],{"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-chunky-monkey.json":function(e,o){e.exports={data:{markdownRemark:{html:'<p><img src="//discourse-user-assets.s3.amazonaws.com/original/2X/a/aadd6bead83ab7d79a795c326f005a89e6ad81f5.png"></p>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/triangular_flag_on_post.png?v=3" alt=":triangular_flag_on_post:" title=":triangular_flag_on_post:"> Remember to use <a><strong><code>Read-Search-Ask</code></strong></a> if you get stuck. Try to pair program <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/busts_in_silhouette.png?v=3" alt=":busts_in_silhouette:" title=":busts_in_silhouette:"> and write your own code <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/pencil.png?v=3" alt=":pencil:" title=":pencil:"></p>\n<h3><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/checkered_flag.png?v=3" alt=":checkered_flag:" title=":checkered_flag:"> Problem Explanation:</h3>\n<p>Our goal for this Algorithm is to split <code>arr</code> (first argument) into smaller chunks of arrays with the length provided by <code>size</code> (second argument). There are 4 green checks (objectives) our code needs to pass in order to complete this Algorithm:</p>\n<ol>\n<li><code>([\'a\', \'b\', \'c\', \'d\'], 2)</code> is expected to be <code>[[\'a\', \'b\'], [\'c\', \'d\']]</code></li>\n<li><code>([0, 1, 2, 3, 4, 5], 3)</code> is expected to be <code>[[0, 1, 2], [3, 4, 5]]</code></li>\n<li><code>([0, 1, 2, 3, 4, 5], 2)</code> is expected to be <code>[[0, 1], [2, 3], [4, 5]]</code></li>\n<li><code>([0, 1, 2, 3, 4, 5], 4)</code> is expected to be <code>[[0, 1, 2, 3], [4, 5]]</code></li>\n</ol>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push">Array.push()</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice">Array.slice()</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" alt=":speech_balloon:" title=":speech_balloon:"> Hint: 1</h2>\n<p>The links above suggest to use <code>Array.push()</code>, so let\'s start by first creating a new array to store the smaller arrays we will soon have like this:</p>\n<pre><code>var newArray = [];\n</code></pre>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" alt=":speech_balloon:" title=":speech_balloon:"> Hint: 2</h2>\n<p>Next we\'ll need a <code>for loop</code> to loop through <code>arr</code>.</p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" alt=":speech_balloon:" title=":speech_balloon:"> Hint: 3</h2>\n<p>Finally, we need a method to do the actual splitting and we can use <code>Array.slice()</code> to do that. The key to this Algorithm is understanding how a <code>for loop</code>, <code>size</code>, <code>Array.slice()</code> and <code>Array.push()</code> all work together.</p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2>Spoiler Alert!</h2>\n<p><img src="//discourse-user-assets.s3.amazonaws.com/original/2X/2/2d6c412a50797771301e7ceabd554cef4edcd74d.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></p>\n<p><strong>Solution ahead!</strong></p>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/beginner.png?v=3" alt=":beginner:" title=":beginner:"> Basic Code Solution:</h2>\n<pre><code>function chunkArrayInGroups(arr, size) {\n\n  var temp = [];\n  var result = [];\n\n  for (var a = 0; a &#x3C; arr.length; a++) {\n    if (a % size !== size - 1)\n      temp.push(arr[a]);\n    else {\n      temp.push(arr[a]);\n      result.push(temp);\n      temp = [];\n    }\n  }\n\n  if (temp.length !== 0)\n    result.push(temp);\n  return result;\n}\n</code></pre>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/CLjU/24">Run Code</a></p>\n<h3>Code Explanation:</h3>\n<ul>\n<li>Firstly, we create two empty arrays called <code>temp</code> and <code>result</code>, which we will eventually return.</li>\n<li>Our <strong>for loop</strong> loops until <code>a</code> is equal to or more than the length of the array in our test.</li>\n<li>Inside our loop, we push to <code>temp</code> using <code>temp.push(arr[a]);</code> if the remainder of <code>a / size</code> is not equal to <code>size - 1</code>.</li>\n<li>Otherwise, we push to <code>temp</code>, push <code>temp</code> to the <code>result</code> variable and reset <code>temp</code> to an empty array.</li>\n<li>Next, if <code>temp</code> isn\'t an empty array, we push it to <code>result</code>.</li>\n<li>Finally, we return the value of <code>result</code>.</li>\n</ul>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push">Array.push()</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for">For Loops</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/sunflower.png?v=3" alt=":sunflower:" title=":sunflower:"> Intermediate Code Solution:</h2>\n<pre><code>function chunkArrayInGroups(arr, size) {\n  // Break it up.\n  var arr2 = [];\n  for (var i = 0; i &#x3C; arr.length; i+=size) {\n    arr2.push(arr.slice(i , i+size));\n  }\n  return arr2;\n}\n</code></pre>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/Cj9x/3">Run Code</a></p>\n<h3>Code Explanation:</h3>\n<ul>\n<li>First, we create an empty array <code>arr2</code> where we will store our \'chunks\'.</li>\n<li>The for loop starts at zero, increments by <code>size</code> each time through the loop, and stops when it reaches <code>arr.length</code>.</li>\n<li>Note that this for loop does not loop through <code>arr</code>. Instead, we are using the loop to generate numbers we can use as indices to slice the array in the right locations.</li>\n<li>Inside our loop, we create each chunk using <code>arr.slice(i, i+size)</code>, and add this value to <code>arr2</code> with <code>arr2.push()</code>.</li>\n<li>Finally, we return the value of <code>arr2</code>.</li>\n</ul>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push">Array.push()</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice">Array.slice()</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for">For Loops</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rotating_light.png?v=3" alt=":rotating_light:" title=":rotating_light:"> Advanced Code Solution:</h2>\n<pre><code>function chunkArrayInGroups(arr, size) {\n  // Break it up.\n  var newArr = [];\n  var i = 0;\n\n  while (i &#x3C; arr.length) {\n    newArr.push(arr.slice(i, i+size));\n    i += size;\n  }\n  return newArr;\n}\nchunkArrayInGroups(["a", "b", "c", "d"], 2);\n</code></pre>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/CLjU/26">Run Code</a></p>\n<h3>Code Explanation:</h3>\n<ul>\n<li>\n<p>Firstly, we create two variables. <code>newArr</code> is an empty array which we will push to. We also have the <code>i</code> variable set to zero, for use in our while loop.</p>\n</li>\n<li>\n<p>Our while loop loops until <code>i</code> is equal to or more than the length of the array in our test.</p>\n</li>\n<li>\n<p>Inside our loop, we push to the <code>newArr</code> array using <code>arr.slice(i, i+size)</code>. For the first time it loops, it will look something like:</p>\n<p>newArr.push(arr.slice(1, 1+2))</p>\n</li>\n<li>\n<p>After we push to <code>newArr</code>, we add the variable of <code>size</code> onto <code>i</code>.</p>\n</li>\n<li>\n<p>Finally, we return the value of <code>newArr</code>.</p>\n</li>\n</ul>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push">Array.push()</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice">Array.slice()</a></li>\n<li><a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/while">While Loops</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rotating_light.png?v=3" alt=":rotating_light:" title=":rotating_light:"> Advanced Code Solution 2:</h2>\n<pre><code>function chunkArrayInGroups(arr, size) {\n  var newArr = [];\n  while (arr.length) {\n    newArr.push(arr.splice(0,size));\n  }\n  return newArr;\n}\n</code></pre>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/CLjU/579">Run Code</a></p>\n<h3>Code Explanation:</h3>\n<ul>\n<li>Firstly, we create a variable. <code>newArr</code> is an empty array which we will push to.</li>\n<li>Our <code>while</code> loop loops until the length of the array in our test is not 0.</li>\n<li>Inside our loop, we push to the <code>newArr</code> array using <code>arr.splice(0, size)</code>.</li>\n<li>For each iteration of <code>while</code> loop, it deletes <code>size</code> number of elements from the front of <code>arr</code> and push them as an array to <code>newArr</code>.</li>\n<li>Finally, we return the value of <code>newArr</code>.</li>\n</ul>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push">Array.push()</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice">Array.splice()</a></li>\n<li><a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/while">While Loops</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/clipboard.png?v=3" alt=":clipboard:" title=":clipboard:"> NOTES FOR CONTRIBUTIONS:</h2>\n<ul>\n<li><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3" alt=":warning:" title=":warning:"> <strong>DO NOT</strong> add solutions that are similar to any existing solutions. If you think it is <strong><em>similar but better</em></strong>, then try to merge (or replace) the existing similar solution.</li>\n<li>Add an explanation of your solution.</li>\n<li>Categorize the solution in one of the following categories — <strong>Basic</strong>, <strong>Intermediate</strong> and <strong>Advanced</strong>. <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/traffic_light.png?v=3" alt=":traffic_light:" title=":traffic_light:"></li>\n<li>Please add your username only if you have added any <strong>relevant main contents</strong>. (<img src="https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3" alt=":warning:" title=":warning:"> <strong><em>DO NOT</em></strong> <em>remove any existing usernames</em>)</li>\n</ul>\n<blockquote>\n<p>See <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/point_right.png?v=3" alt=":point_right:" title=":point_right:"> <a href="http://forum.freecodecamp.com/t/algorithm-article-template/14272"><strong><code>Wiki Challenge Solution Template</code></strong></a> for reference.</p>\n</blockquote>',frontmatter:{title:"Chunky Monkey",parent:"/home/stuart/guides/src/pages/articles/certificates/chunky-monkey/index.md absPath of file"}}},pathContext:{slug:"/articles/certificates/chunky-monkey/"}}}});
//# sourceMappingURL=path---articles-certificates-chunky-monkey-1968bc97a65691da7fde.js.map