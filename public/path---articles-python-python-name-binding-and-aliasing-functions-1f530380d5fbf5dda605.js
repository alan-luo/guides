webpackJsonp([166],{"./node_modules/json-loader/index.js!./.cache/json/articles-python-python-name-binding-and-aliasing-functions.json":function(n,e){n.exports={data:{markdownRemark:{html:"<p>A function definition introduces the function name in the current symbol table. The value of the function name has a type that is recognized by the interpreter as a user-defined function.</p>\n<pre><code>>>> something = 1\n>>> type(something)\n&#x3C;type 'int'>\n>>> def something():\n...     pass\n...\n>>> type(something)\n&#x3C;type 'function'>\n>>> something = []\n>>> type(something)\n&#x3C;type 'list'>\n</code></pre>\n<p>This value can be assigned to another name which can then also be used as a function. This serves as a general renaming mechanism:</p>\n<pre><code>>>> fib\n&#x3C;function fib at 10042ed0>\n>>> f = fib\n>>> f(100)\n0 1 1 2 3 5 8 13 21 34 55 89\n</code></pre>",frontmatter:{title:"Python Name Binding and Aliasing Functions",parent:"/home/stuart/guides/src/pages/articles/python/python-name-binding-and-aliasing-functions/index.md absPath of file"}}},pathContext:{slug:"/articles/python/python-name-binding-and-aliasing-functions/"}}}});
//# sourceMappingURL=path---articles-python-python-name-binding-and-aliasing-functions-1f530380d5fbf5dda605.js.map