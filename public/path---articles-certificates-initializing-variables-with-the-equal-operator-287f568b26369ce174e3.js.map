{"version":3,"sources":["webpack:///path---articles-certificates-initializing-variables-with-the-equal-operator-287f568b26369ce174e3.js","webpack:///./.cache/json/articles-certificates-initializing-variables-with-the-equal-operator.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-certificates-initializing-variables-with-the-equal-operator.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,OAERC,8HACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,+TACAC,aACAC,MAAA,iDACAC,OAAA,iIAIAC,aACAC,KAAA","file":"path---articles-certificates-initializing-variables-with-the-equal-operator-287f568b26369ce174e3.js","sourcesContent":["webpackJsonp([2184],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-initializing-variables-with-the-equal-operator.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p>In most cases you will see a variable being declared and given an initial value all at the same time. This allows you to use it right away with a proper value.</p>\\n<pre><code>var myVar = 0;\\n</code></pre>\\n<p>Creates a new variable called <code>myVar</code> and assigns it an initial value of <code>0</code>.</p>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Initializing Variables with the Equal Operator\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/certificates/initializing-variables-with-the-equal-operator/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/certificates/initializing-variables-with-the-equal-operator/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-certificates-initializing-variables-with-the-equal-operator-287f568b26369ce174e3.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p>In most cases you will see a variable being declared and given an initial value all at the same time. This allows you to use it right away with a proper value.</p>\\n<pre><code>var myVar = 0;\\n</code></pre>\\n<p>Creates a new variable called <code>myVar</code> and assigns it an initial value of <code>0</code>.</p>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Initializing Variables with the Equal Operator\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/certificates/initializing-variables-with-the-equal-operator/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/certificates/initializing-variables-with-the-equal-operator/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-certificates-initializing-variables-with-the-equal-operator.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-certificates-initializing-variables-with-the-equal-operator.json\n// module chunks = 2184"],"sourceRoot":""}