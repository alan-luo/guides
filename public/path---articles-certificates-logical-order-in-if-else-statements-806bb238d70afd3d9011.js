webpackJsonp([1942],{"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-logical-order-in-if-else-statements.json":function(e,t){e.exports={data:{markdownRemark:{html:'<p>Order is important in <code>if</code>, <code>else if</code> and <code>else</code> statements.</p>\n<p>The loop is executed from top to bottom so you will want to be careful of which statement comes first.</p>\n<p>Take these two functions as an example.</p>\n<h2>Examples:</h2>\n<pre><code>function foo(x) {\n  if (x &#x3C; 1) {\n    return "Less than one";\n    } \n  else if (x &#x3C; 2) {\n    return "Less than two";\n    } \n  else {\n    return "Greater than or equal to two";\n    }\n}\n</code></pre>\n<p>And the second just switches the order of the statements:</p>\n<pre><code>function bar(x) {\n  if (x &#x3C; 2) {\n    return "Less than two";\n    } \n  else if (x &#x3C; 1) {\n    return "Less than one";\n    }\n  else {\n    return "Greater than or equal to two";\n    }\n}\n</code></pre>\n<p>While these two functions look nearly identical, if we pass a number to both we get different outputs.</p>\n<pre><code>foo(0) // "Less than one" \n\nbar(0) // "Less than two"\n</code></pre>\n<p>So be careful while using the <code>if</code>, <code>else if</code> and <code>else</code> statements and always remember that these are executed from top to bottom. Keep this in mind placing your statements accordingly so that you get the desired output.</p>',frontmatter:{title:"Logical Order In If Else Statements",parent:"/home/stuart/guides/src/pages/articles/certificates/logical-order-in-if-else-statements/index.md absPath of file"}}},pathContext:{slug:"/articles/certificates/logical-order-in-if-else-statements/"}}}});
//# sourceMappingURL=path---articles-certificates-logical-order-in-if-else-statements-806bb238d70afd3d9011.js.map