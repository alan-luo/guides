{"version":3,"sources":["webpack:///path---articles-java-java-docs-access-modifiers-7aa74aed23ee8f2903c5.js","webpack:///./.cache/json/articles-java-java-docs-access-modifiers.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-java-java-docs-access-modifiers.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,OAERC,kGACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,i/BACAC,aACAC,MAAA,6BACAC,OAAA,qGAIAC,aACAC,KAAA","file":"path---articles-java-java-docs-access-modifiers-7aa74aed23ee8f2903c5.js","sourcesContent":["webpackJsonp([1566],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-java-java-docs-access-modifiers.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<h1>Java Access Modifiers</h1>\\n<p>Ok, so if <code>modelS</code> has all the same properties, I should be able to access <code>name</code> or <code>manufacturerName</code> right?</p>\\n<pre><code>System.out.println(modelS.name);\\n</code></pre>\\n<p>Results in :</p>\\n<pre><code>Main.java:13: error: name has private access in Car\\n        System.out.println(modelS.name);\\n                                 ^\\n1 error\\n</code></pre>\\n<p>Why? Notice we had mentioned <code>private</code> before the variable <code>name</code> in class <code>Car</code>. This marks the variable as <code>private</code> to the class which means that the variable cannot be modified or accessed from another class, even if an object of the class is instantiated. So, unless you provide a public <code>setter</code> method or any other <code>public</code> method to access the variable, there is no way it's visible to the outside world.</p>\\n<p>There are other kinds of access modifiers such as public, protected, default etc.</p>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Java Docs Access Modifiers\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/java/java-docs-access-modifiers/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/java/java-docs-access-modifiers/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-java-java-docs-access-modifiers-7aa74aed23ee8f2903c5.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<h1>Java Access Modifiers</h1>\\n<p>Ok, so if <code>modelS</code> has all the same properties, I should be able to access <code>name</code> or <code>manufacturerName</code> right?</p>\\n<pre><code>System.out.println(modelS.name);\\n</code></pre>\\n<p>Results in :</p>\\n<pre><code>Main.java:13: error: name has private access in Car\\n        System.out.println(modelS.name);\\n                                 ^\\n1 error\\n</code></pre>\\n<p>Why? Notice we had mentioned <code>private</code> before the variable <code>name</code> in class <code>Car</code>. This marks the variable as <code>private</code> to the class which means that the variable cannot be modified or accessed from another class, even if an object of the class is instantiated. So, unless you provide a public <code>setter</code> method or any other <code>public</code> method to access the variable, there is no way it's visible to the outside world.</p>\\n<p>There are other kinds of access modifiers such as public, protected, default etc.</p>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Java Docs Access Modifiers\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/java/java-docs-access-modifiers/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/java/java-docs-access-modifiers/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-java-java-docs-access-modifiers.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-java-java-docs-access-modifiers.json\n// module chunks = 1566"],"sourceRoot":""}