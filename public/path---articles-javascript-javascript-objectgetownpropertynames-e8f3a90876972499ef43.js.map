{"version":3,"sources":["webpack:///path---articles-javascript-javascript-objectgetownpropertynames-e8f3a90876972499ef43.js","webpack:///./.cache/json/articles-javascript-javascript-objectgetownpropertynames.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-javascript-javascript-objectgetownpropertynames.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,OAERC,kHACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,m3EACAC,aACAC,MAAA,uCACAC,OAAA,qHAIAC,aACAC,KAAA","file":"path---articles-javascript-javascript-objectgetownpropertynames-e8f3a90876972499ef43.js","sourcesContent":["webpackJsonp([1189],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-javascript-javascript-objectgetownpropertynames.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p>The <code>Object.getOwnPropertyNames()</code> method returns an array of all properties (enumerable or not) found directly upon a given object.</p>\\n<h2>Syntax</h2>\\n<pre><code>Object.getOwnPropertyNames(obj)\\n</code></pre>\\n<h3>Parameters</h3>\\n<p><strong>obj</strong></p>\\n<p>The object whose enumerable <em>and non-enumerable</em> own properties are to be returned.</p>\\n<p><a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\\\">MDN link</a> | <a href=\\\"https://msdn.microsoft.com/en-us/LIBRary/ff688126(v=vs.94).aspx\\\">MSDN link</a></p>\\n<h2>Description</h2>\\n<p><code>Object.getOwnPropertyNames()</code> returns an array whose elements are strings corresponding to the enumerable <em>and non-enumerable</em> properties found directly upon object. The ordering of the enumerable properties in the array is consistent with the ordering exposed by a <code>for...in</code> loop (or by <code>Object.keys()</code>) over the properties of the object. The ordering of the non-enumerable properties in the array, and among the enumerable properties, is not defined.</p>\\n<h2>Examples</h2>\\n<pre><code>var arr = ['a', 'b', 'c'];\\nconsole.log(Object.getOwnPropertyNames(arr).sort()); // logs '0,1,2,length'\\n\\n// Array-like object\\nvar obj = { 0: 'a', 1: 'b', 2: 'c' };\\nconsole.log(Object.getOwnPropertyNames(obj).sort()); // logs '0,1,2'\\n\\n// Logging property names and values using Array.forEach\\nObject.getOwnPropertyNames(obj).forEach(function(val, idx, array) {\\n  console.log(val + ' -> ' + obj[val]);\\n});\\n// logs\\n// 0 -> a\\n// 1 -> b\\n// 2 -> c\\n\\n// non-enumerable property\\nvar my_obj = Object.create({}, {\\n  getFoo: {\\n    value: function() { return this.foo; },\\n    enumerable: false\\n  }\\n});\\nmy_obj.foo = 1;\\n\\nconsole.log(Object.getOwnPropertyNames(my_obj).sort()); // logs 'foo,getFoo'\\n\\nfunction Pasta(grain, size, shape) {\\n    this.grain = grain; \\n    this.size = size; \\n    this.shape = shape; \\n}\\n\\nvar spaghetti = new Pasta(\\\"wheat\\\", 2, \\\"circle\\\");\\n\\nvar names = Object.getOwnPropertyNames(spaghetti).filter(CheckKey);\\ndocument.write(names); \\n\\n// Check whether the first character of a string is 's'. \\nfunction CheckKey(value) {\\n    var firstChar = value.substr(0, 1); \\n    if (firstChar.toLowerCase() == 's')\\n        return true; \\n    else\\n         return false; \\n}\\n// Output:\\n// size,shape\\n</code></pre>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"javaScript Objectgetownpropertynames\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/javascript/javascript-objectgetownpropertynames/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/javascript/javascript-objectgetownpropertynames/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-javascript-javascript-objectgetownpropertynames-e8f3a90876972499ef43.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p>The <code>Object.getOwnPropertyNames()</code> method returns an array of all properties (enumerable or not) found directly upon a given object.</p>\\n<h2>Syntax</h2>\\n<pre><code>Object.getOwnPropertyNames(obj)\\n</code></pre>\\n<h3>Parameters</h3>\\n<p><strong>obj</strong></p>\\n<p>The object whose enumerable <em>and non-enumerable</em> own properties are to be returned.</p>\\n<p><a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames\\\">MDN link</a> | <a href=\\\"https://msdn.microsoft.com/en-us/LIBRary/ff688126(v=vs.94).aspx\\\">MSDN link</a></p>\\n<h2>Description</h2>\\n<p><code>Object.getOwnPropertyNames()</code> returns an array whose elements are strings corresponding to the enumerable <em>and non-enumerable</em> properties found directly upon object. The ordering of the enumerable properties in the array is consistent with the ordering exposed by a <code>for...in</code> loop (or by <code>Object.keys()</code>) over the properties of the object. The ordering of the non-enumerable properties in the array, and among the enumerable properties, is not defined.</p>\\n<h2>Examples</h2>\\n<pre><code>var arr = ['a', 'b', 'c'];\\nconsole.log(Object.getOwnPropertyNames(arr).sort()); // logs '0,1,2,length'\\n\\n// Array-like object\\nvar obj = { 0: 'a', 1: 'b', 2: 'c' };\\nconsole.log(Object.getOwnPropertyNames(obj).sort()); // logs '0,1,2'\\n\\n// Logging property names and values using Array.forEach\\nObject.getOwnPropertyNames(obj).forEach(function(val, idx, array) {\\n  console.log(val + ' -> ' + obj[val]);\\n});\\n// logs\\n// 0 -> a\\n// 1 -> b\\n// 2 -> c\\n\\n// non-enumerable property\\nvar my_obj = Object.create({}, {\\n  getFoo: {\\n    value: function() { return this.foo; },\\n    enumerable: false\\n  }\\n});\\nmy_obj.foo = 1;\\n\\nconsole.log(Object.getOwnPropertyNames(my_obj).sort()); // logs 'foo,getFoo'\\n\\nfunction Pasta(grain, size, shape) {\\n    this.grain = grain; \\n    this.size = size; \\n    this.shape = shape; \\n}\\n\\nvar spaghetti = new Pasta(\\\"wheat\\\", 2, \\\"circle\\\");\\n\\nvar names = Object.getOwnPropertyNames(spaghetti).filter(CheckKey);\\ndocument.write(names); \\n\\n// Check whether the first character of a string is 's'. \\nfunction CheckKey(value) {\\n    var firstChar = value.substr(0, 1); \\n    if (firstChar.toLowerCase() == 's')\\n        return true; \\n    else\\n         return false; \\n}\\n// Output:\\n// size,shape\\n</code></pre>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"javaScript Objectgetownpropertynames\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/javascript/javascript-objectgetownpropertynames/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/javascript/javascript-objectgetownpropertynames/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-javascript-javascript-objectgetownpropertynames.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-javascript-javascript-objectgetownpropertynames.json\n// module chunks = 1189"],"sourceRoot":""}