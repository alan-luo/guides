webpackJsonp([2109],{"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-sorted-union.json":function(e,t){e.exports={data:{markdownRemark:{html:'<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/triangular_flag_on_post.png?v=3" alt=":triangular_flag_on_post:" title=":triangular_flag_on_post:"> Remember to use <a><strong><code>Read-Search-Ask</code></strong></a> if you get stuck. Try to pair program <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/busts_in_silhouette.png?v=3" alt=":busts_in_silhouette:" title=":busts_in_silhouette:"> and write your own code <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/pencil.png?v=3" alt=":pencil:" title=":pencil:"></p>\n<h3><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/checkered_flag.png?v=3" alt=":checkered_flag:" title=":checkered_flag:"> Problem Explanation:</h3>\n<p>The program has to return a new array of unique values from two original arrays in the order they show up. So there is not sorting required, and there shouldn\'t be any duplicates.</p>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="http://forum.freecodecamp.com/t/javascript-arguments/14283">JS Arguments</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" alt=":speech_balloon:" title=":speech_balloon:"> Hint: 1</h2>\n<p>Since you have no idea how many parameters were passed, it would be best to loop through the <strong>arguments</strong> before looping through the arrays.</p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" alt=":speech_balloon:" title=":speech_balloon:"> Hint: 2</h2>\n<p>It isn\'t necessary to use loops. You can use functions such as <code>map()</code>, <code>reduce()</code> or others if you want.</p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3" alt=":speech_balloon:" title=":speech_balloon:"> Hint: 3</h2>\n<p>You will have to check if the current value is already on the array to be returned for every value.</p>\n<blockquote>\n<p><em>try to solve the problem now</em></p>\n</blockquote>\n<h2>Spoiler Alert!</h2>\n<p><img src="//discourse-user-assets.s3.amazonaws.com/original/2X/2/2d6c412a50797771301e7ceabd554cef4edcd74d.gif" alt="687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif"></p>\n<p><strong>Solution ahead!</strong></p>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/beginner.png?v=3" alt=":beginner:" title=":beginner:"> Basic Code Solution:</h2>\n<pre><code>function uniteUnique(arr1, arr2, arr3) {\n  // Creates an empty array to store our final result.\n  var finalArray = [];\n\n  // Loop through the arguments object to truly made the program work with two or more arrays\n  // instead of 3.\n  for (var i = 0; i &#x3C; arguments.length; i++) {\n    var arrayArguments = arguments[i];\n\n    // Loops through the array at hand\n    for (var j = 0; j &#x3C; arrayArguments.length; j++) {\n      var indexValue = arrayArguments[j];\n\n      // Checks if the value is already on the final array.\n      if (finalArray.indexOf(indexValue) &#x3C; 0) {\n        finalArray.push(indexValue);\n      }\n    }\n  }\n\n  return finalArray;\n}\n\n// test here\nuniteUnique([1, 3, 2], [5, 2, 1, 4], [2, 1]);\n</code></pre>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/CLnM/0">Run Code</a></p>\n<h3>Code Explanation:</h3>\n<ul>\n<li>Create empty array <strong>finalResult</strong> to store the final result.</li>\n<li>Loop through the <strong>arguments</strong> object in the outer loop and store it in <strong>arrayArguments</strong>.</li>\n<li>The inner loop is used to loop through individual array elements.</li>\n<li>If the element doesn\'t already exist in <strong>finalArray</strong>, add it.</li>\n<li>Return <strong>finalArray</strong>.</li>\n</ul>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="http://forum.freecodecamp.com/t/javascript-for-loop/14666s-Explained">JS For Loops Explained</a></li>\n<li><a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/length">array.length</a></li>\n<li><a href="http://forum.freecodecamp.com/t/javascript-string-prototype-indexof/15936">JS String Prototype IndexOf</a></li>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-prototype-push/14298">JS Array Prototype Push</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/sunflower.png?v=3" alt=":sunflower:" title=":sunflower:"> Intermediate Code Solution:</h2>\n<pre><code>function uniteUnique(arr1, arr2, arr3) {\n var newArr;\n //Convert the arguments object into an array\n  var args = Array.prototype.slice.call(arguments);\n  //Use reduce function to flatten the array\n  newArr = args.reduce(function(arrA,arrB){\n  //Apply filter to remove the duplicate elements in the array\n    return arrA.concat(arrB.filter(function(i){\n      return arrA.indexOf(i) === -1;\n    }));\n  });\n\n   return newArr;                    \n}\n\n// test here\nuniteUnique([1, 3, 2], [5, 2, 1, 4], [2, 1]);\n</code></pre>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/CLnO/0">Run Code</a></p>\n<h3>Code Explanation:</h3>\n<ul>\n<li><strong>arguments</strong> object is converted into an array using <code>slice()</code>.</li>\n<li><code>reduce()</code> function is used to flatten the array i.e., for every element that is in the array (or nested arrays), extract it\'s elements into one-dimensional array.</li>\n<li>After flattening the array, <code>filter()</code> is used to remove duplicate elements from <strong>newArr</strong>.</li>\n</ul>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-prototype-slice/14302">JS Array Prototype Slice</a></li>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-prototype-reduce/14299">JS Array Prototype Reduce</a></li>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-prototype-concat/14286">JS Array Prototype Concat</a></li>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-prototype-filter/14289">JS Array Prototype Filter</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rotating_light.png?v=3" alt=":rotating_light:" title=":rotating_light:"> Advanced Code Solution:</h2>\n<pre><code>function uniteUnique() {\n  var concatArr = [];\n  var i = 0;\n  while (arguments[i]){\n    concatArr = concatArr.concat(arguments[i]); i++;\n  }\n  uniqueArray = concatArr.filter(function(item, pos) {\n    return concatArr.indexOf(item) == pos;\n  });\n  return uniqueArray;\n}\n\n// test here\nuniteUnique([1, 3, 2], [5, 2, 1, 4], [2, 1]);\n</code></pre>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/CLnN/0">Run Code</a></p>\n<h3>Code Explanation:</h3>\n<ul>\n<li>Number of arguments can change dynamically, so we don\'t need to bother providing our function <code>uniteUnique()</code> with arguments at all.</li>\n<li>We use a <code>while</code> loop to concatenate all the arguments into one array called <strong>concatArr</strong>.</li>\n<li>We use <code>filter()</code> to remove the duplicate elements by checking the index of each element and removing same elements with different positions.</li>\n<li>Ordering will be preserved here.</li>\n</ul>\n<h4>Relevant Links</h4>\n<ul>\n<li><a>JS While Loop</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rotating_light.png?v=3" alt=":rotating_light:" title=":rotating_light:"> Alternative Code Solution using ES2015</h2>\n<pre><code>//jshint esversion:6\n\nfunction uniteUnique(arr) {\n\n  //make an array out of arguments and flatten it (using the spread operator)\n  const args = [].concat(...arguments);\n\n  // create a Set\n  return [...new Set(args)];\n}\n\n// test here\nuniteUnique([1, 3, 2], [5, 2, 1, 4], [2, 1]);\n</code></pre>\n<p><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3" alt=":rocket:" title=":rocket:"> <a href="https://repl.it/CcWk/0">Run Code</a></p>\n<h3>Code Explanation:</h3>\n<ul>\n<li>We first use <code>concat()</code> with an empty array <code>[]</code> as a starting point and the spread operator <code>...</code> to create an array out of the Arguments object and to flatten it at the same time</li>\n<li>then we use the new ES2015 <strong>Set</strong> object to store only unique values</li>\n<li>(to learn more about Sets, read <a href="http://exploringjs.com/es6/ch_maps-sets.html#_set">here</a>)</li>\n</ul>\n<h4>Relevant Links</h4>\n<ul>\n<li><a href="http://forum.freecodecamp.com/t/javascript-array-prototype-concat/14286">Array.prototype.concat</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments">Arguments</a></li>\n<li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set">Set</a></li>\n</ul>\n<h2><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/clipboard.png?v=3" alt=":clipboard:" title=":clipboard:"> NOTES FOR CONTRIBUTIONS:</h2>\n<ul>\n<li><img src="https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3" alt=":warning:" title=":warning:"> <strong>DO NOT</strong> add solutions that are similar to any existing solutions. If you think it is <strong><em>similar but better</em></strong>, then try to merge (or replace) the existing similar solution.</li>\n<li>Add an explanation of your solution.</li>\n<li>Categorize the solution in one of the following categories — <strong>Basic</strong>, <strong>Intermediate</strong> and <strong>Advanced</strong>. <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/traffic_light.png?v=3" alt=":traffic_light:" title=":traffic_light:"></li>\n<li>Please add your username only if you have added any <strong>relevant main contents</strong>. (<img src="https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3" alt=":warning:" title=":warning:"> <strong><em>DO NOT</em></strong> <em>remove any existing usernames</em>)</li>\n</ul>\n<blockquote>\n<p>See <img src="https://forum.freecodecamp.com/images/emoji/emoji_one/point_right.png?v=3" alt=":point_right:" title=":point_right:"> <a href="http://forum.freecodecamp.com/t/algorithm-article-template/14272"><strong><code>Wiki Challenge Solution Template</code></strong></a> for reference.</p>\n</blockquote>',frontmatter:{title:"Sorted Union",parent:"/home/stuart/guides/src/pages/articles/certificates/sorted-union/index.md absPath of file"}}},pathContext:{slug:"/articles/certificates/sorted-union/"}}}});
//# sourceMappingURL=path---articles-certificates-sorted-union-5397d18fbe6fdfe876f9.js.map