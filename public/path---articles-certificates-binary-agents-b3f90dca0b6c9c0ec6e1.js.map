{"version":3,"sources":["webpack:///path---articles-certificates-binary-agents-b3f90dca0b6c9c0ec6e1.js","webpack:///./.cache/json/articles-certificates-binary-agents.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-certificates-binary-agents.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,OAERC,6FACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,iwTACAC,aACAC,MAAA,gBACAC,OAAA,gGAIAC,aACAC,KAAA","file":"path---articles-certificates-binary-agents-b3f90dca0b6c9c0ec6e1.js","sourcesContent":["webpackJsonp([2044],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-binary-agents.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p><img src=\\\"//discourse-user-assets.s3.amazonaws.com/original/2X/7/70cf3cc5462f69c2f770ad42d0f24f240a8d8f13.jpg\\\"></p>\\n<p><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/triangular_flag_on_post.png?v=3\\\" alt=\\\":triangular_flag_on_post:\\\" title=\\\":triangular_flag_on_post:\\\"> Remember to use <a><strong><code>Read-Search-Ask</code></strong></a> if you get stuck. Try to pair program <img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/busts_in_silhouette.png?v=3\\\" alt=\\\":busts_in_silhouette:\\\" title=\\\":busts_in_silhouette:\\\"> and write your own code <img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/pencil.png?v=3\\\" alt=\\\":pencil:\\\" title=\\\":pencil:\\\"></p>\\n<h2>Problem Explanation:</h2>\\n<p>This problem is very straight forward, you will get a string that will represent a sentence in binary code, and you need to translate that into words. There is not direct way to do this so you will have to translate twice.</p>\\n<h3>Relevant Links</h3>\\n<ul>\\n<li><a href=\\\"http://forum.freecodecamp.com/t/javascript-string-prototype-charcodeat/15933\\\">String.prototype.charCodeAt</a></li>\\n<li><a>String.fromCharCode</a></li>\\n</ul>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3\\\" alt=\\\":speech_balloon:\\\" title=\\\":speech_balloon:\\\"> Hint: 1</h2>\\n<p>You should first convert from <strong>binary</strong> to <strong>decimal</strong> before translating those values into characters.</p>\\n<blockquote>\\n<p><em>try to solve the problem now</em></p>\\n</blockquote>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3\\\" alt=\\\":speech_balloon:\\\" title=\\\":speech_balloon:\\\"> Hint: 2</h2>\\n<p>Things are easier when focusing on smaller parts, divide the input to focus on one letter at the time.</p>\\n<blockquote>\\n<p><em>try to solve the problem now</em></p>\\n</blockquote>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3\\\" alt=\\\":speech_balloon:\\\" title=\\\":speech_balloon:\\\"> Hint: 3</h2>\\n<p>Make sure that each time you transcode a character from binary to decimal, you reset whatever variable you used to keep track of the ones. Also do not forget to turn everything back into one string.</p>\\n<blockquote>\\n<p><em>try to solve the problem now</em></p>\\n</blockquote>\\n<h2>Spoiler Alert!</h2>\\n<p><img src=\\\"//discourse-user-assets.s3.amazonaws.com/original/2X/2/2d6c412a50797771301e7ceabd554cef4edcd74d.gif\\\" alt=\\\"687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif\\\"></p>\\n<p><strong>Solution ahead!</strong></p>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/beginner.png?v=3\\\" alt=\\\":beginner:\\\" title=\\\":beginner:\\\"> Basic Code Solution:</h2>\\n<pre><code>function binaryAgent(str) {\\n  biString = str.split(' ');\\n  uniString = [];\\n\\n/*using the radix (or base) parameter in parseInt, we can convert the binary\\n  number to a decimal number while simultaneously converting to a char*/\\n\\n  for(i=0;i &#x3C; biString.length;i++){\\n    uniString.push(String.fromCharCode(parseInt(biString[i], 2)));\\n  }\\n\\n  // we then simply join the string\\n  return uniString.join('');\\n}\\n\\n// test here\\nbinaryAgent(\\\"01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111\\\");\\n</code></pre>\\n<p><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3\\\" alt=\\\":rocket:\\\" title=\\\":rocket:\\\"> <a href=\\\"https://repl.it/CLnm/0\\\">Run Code</a></p>\\n<h1>Code Explanation:</h1>\\n<ul>\\n<li>Separate the string into an array of strings separated by whitespace.</li>\\n<li>Create some variables that will be needed along the way, the names are self explanatory for the most part.</li>\\n<li>Iterate through each binary string in the new array.</li>\\n<li>Convert to decimal by using parseInt(<em>binary</em>, 2) (with the second parameter we tell in which base our numbers currently are)</li>\\n<li>At the end, we return out converted message.</li>\\n</ul>\\n<h2>Relevant Links</h2>\\n<ul>\\n<li><a href=\\\"http://forum.freecodecamp.com/t/javascript-string-prototype-split/15944\\\">String.prototype.split</a></li>\\n<li><a href=\\\"http://forum.freecodecamp.com/t/javascript-parseint/14686\\\">parseInt</a></li>\\n</ul>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/sunflower.png?v=3\\\" alt=\\\":sunflower:\\\" title=\\\":sunflower:\\\"> Intermediate Code Solution:</h2>\\n<pre><code>function binaryAgent(str) {\\n  // Separate the binary code by space.\\n  str = str.split(' ');\\n  var power;\\n  var decValue = 0;\\n  var sentence = '';\\n\\n  // Check each binary number from the array.\\n  for (var s = 0; s &#x3C; str.length; s++) {\\n    // Check each bit from binary number\\n    for (var t = 0; t &#x3C; str[s].length; t++) {\\n      // This only takes into consideration the active ones.\\n      if (str[s][t] == 1) {\\n        // This is quivalent to 2 ** position\\n        power = Math.pow(2, +str[s].length - t - 1);\\n        decValue += power;\\n\\n        // Record the decimal value by adding the number to the previous one.\\n      }\\n    }\\n\\n    // After the binary number is converted to decimal, convert it to string and store\\n    sentence += (String.fromCharCode(decValue));\\n\\n    // Reset decimal value for next binary number.\\n    decValue = 0;\\n  }\\n\\n  return sentence;\\n}\\n\\n// test here\\nbinaryAgent(\\\"01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111\\\");\\n</code></pre>\\n<p><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3\\\" alt=\\\":rocket:\\\" title=\\\":rocket:\\\"> <a href=\\\"https://repl.it/CLno/0\\\">Run Code</a></p>\\n<h1>Code Explanation</h1>\\n<ul>\\n<li>For each of these binary strings, check for the ones and ignore the zeroes.</li>\\n<li>For those that are one or active then convert them to decimal, this takes into account the position and the right power it needs to be raised to.</li>\\n<li>Store the power into the <strong>power</strong> variable by adding it to any previous ones on the variable <strong>decValue</strong>. This variable will add and add the powers of the active ones until the end of the loop and then return the decimal number.</li>\\n<li>Convert the final decimal outside of the inner loop and then convert it to ASCII and saving it to <strong>sentence</strong> along with any other text string already converted and stored.</li>\\n<li>Reset the variable <strong>decValue</strong> to avoid getting wrong decimals before continuing to the outer loop.</li>\\n</ul>\\n<h2>Relevant Links</h2>\\n<ul>\\n<li><a href=\\\"http://forum.freecodecamp.com/t/javascript-math-pow/14685\\\">Math.pow</a></li>\\n<li><a>String.length</a></li>\\n<li><a href=\\\"http://example.com\\\">Link Title 3</a></li>\\n</ul>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/rotating_light.png?v=3\\\" alt=\\\":rotating_light:\\\" title=\\\":rotating_light:\\\"> Advanced Code Solution:</h2>\\n<pre><code>function binaryAgent(str) {\\n  return String.fromCharCode(...str.split(\\\" \\\").map(function(char){ return parseInt(char, 2); }));\\n}\\n\\n// test here\\nbinaryAgent(\\\"01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111\\\");\\n</code></pre>\\n<p><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3\\\" alt=\\\":rocket:\\\" title=\\\":rocket:\\\"> <a href=\\\"https://repl.it/CLnp/0\\\">Run Code</a></p>\\n<h1>Code Explanation</h1>\\n<ul>\\n<li>First we use <code>split()</code> to be able to work on each character as an Array element</li>\\n<li>Then use <code>map()</code> to process each element from binary to decimal using <code>pareseInt()</code></li>\\n<li>Last we can use <code>String.fromCharCode()</code> to convert each ASCII number into the corresponding character</li>\\n<li>However <code>fromCharCode()</code> expects a series of numbers rather than an Array! We can use ES6 Spread Operator to pass in an Array of numbers as individual numbers. See here for more info; <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator\\\">Spread Operator</a></li>\\n</ul>\\n<h2>Relevant Links</h2>\\n<ul>\\n<li><a href=\\\"http://forum.freecodecamp.com/t/javascript-array-prototype-map/14294\\\">Array.prototype.map</a></li>\\n</ul>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/clipboard.png?v=3\\\" alt=\\\":clipboard:\\\" title=\\\":clipboard:\\\"> NOTES FOR CONTRIBUTIONS:</h2>\\n<ul>\\n<li><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3\\\" alt=\\\":warning:\\\" title=\\\":warning:\\\"> <strong>DO NOT</strong> add solutions that are similar to any existing solutions. If you think it is <strong><em>similar but better</em></strong>, then try to merge (or replace) the existing similar solution.</li>\\n<li>Add an explanation of your solution.</li>\\n<li>Categorize the solution in one of the following categories — <strong>Basic</strong>, <strong>Intermediate</strong> and <strong>Advanced</strong>. <img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/traffic_light.png?v=3\\\" alt=\\\":traffic_light:\\\" title=\\\":traffic_light:\\\"></li>\\n<li>Please add your username only if you have added any <strong>relevant main contents</strong>. (<img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3\\\" alt=\\\":warning:\\\" title=\\\":warning:\\\"> <strong><em>DO NOT</em></strong> <em>remove any existing usernames</em>)</li>\\n</ul>\\n<blockquote>\\n<p>See <img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/point_right.png?v=3\\\" alt=\\\":point_right:\\\" title=\\\":point_right:\\\"> <a href=\\\"http://forum.freecodecamp.com/t/algorithm-article-template/14272\\\"><strong><code>Wiki Challenge Solution Template</code></strong></a> for reference.</p>\\n</blockquote>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Binary Agents\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/certificates/binary-agents/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/certificates/binary-agents/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-certificates-binary-agents-b3f90dca0b6c9c0ec6e1.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p><img src=\\\"//discourse-user-assets.s3.amazonaws.com/original/2X/7/70cf3cc5462f69c2f770ad42d0f24f240a8d8f13.jpg\\\"></p>\\n<p><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/triangular_flag_on_post.png?v=3\\\" alt=\\\":triangular_flag_on_post:\\\" title=\\\":triangular_flag_on_post:\\\"> Remember to use <a><strong><code>Read-Search-Ask</code></strong></a> if you get stuck. Try to pair program <img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/busts_in_silhouette.png?v=3\\\" alt=\\\":busts_in_silhouette:\\\" title=\\\":busts_in_silhouette:\\\"> and write your own code <img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/pencil.png?v=3\\\" alt=\\\":pencil:\\\" title=\\\":pencil:\\\"></p>\\n<h2>Problem Explanation:</h2>\\n<p>This problem is very straight forward, you will get a string that will represent a sentence in binary code, and you need to translate that into words. There is not direct way to do this so you will have to translate twice.</p>\\n<h3>Relevant Links</h3>\\n<ul>\\n<li><a href=\\\"http://forum.freecodecamp.com/t/javascript-string-prototype-charcodeat/15933\\\">String.prototype.charCodeAt</a></li>\\n<li><a>String.fromCharCode</a></li>\\n</ul>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3\\\" alt=\\\":speech_balloon:\\\" title=\\\":speech_balloon:\\\"> Hint: 1</h2>\\n<p>You should first convert from <strong>binary</strong> to <strong>decimal</strong> before translating those values into characters.</p>\\n<blockquote>\\n<p><em>try to solve the problem now</em></p>\\n</blockquote>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3\\\" alt=\\\":speech_balloon:\\\" title=\\\":speech_balloon:\\\"> Hint: 2</h2>\\n<p>Things are easier when focusing on smaller parts, divide the input to focus on one letter at the time.</p>\\n<blockquote>\\n<p><em>try to solve the problem now</em></p>\\n</blockquote>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/speech_balloon.png?v=3\\\" alt=\\\":speech_balloon:\\\" title=\\\":speech_balloon:\\\"> Hint: 3</h2>\\n<p>Make sure that each time you transcode a character from binary to decimal, you reset whatever variable you used to keep track of the ones. Also do not forget to turn everything back into one string.</p>\\n<blockquote>\\n<p><em>try to solve the problem now</em></p>\\n</blockquote>\\n<h2>Spoiler Alert!</h2>\\n<p><img src=\\\"//discourse-user-assets.s3.amazonaws.com/original/2X/2/2d6c412a50797771301e7ceabd554cef4edcd74d.gif\\\" alt=\\\"687474703a2f2f7777772e796f75726472756d2e636f6d2f796f75726472756d2f696d616765732f323030372f31302f31302f7265645f7761726e696e675f7369676e5f322e676966.gif\\\"></p>\\n<p><strong>Solution ahead!</strong></p>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/beginner.png?v=3\\\" alt=\\\":beginner:\\\" title=\\\":beginner:\\\"> Basic Code Solution:</h2>\\n<pre><code>function binaryAgent(str) {\\n  biString = str.split(' ');\\n  uniString = [];\\n\\n/*using the radix (or base) parameter in parseInt, we can convert the binary\\n  number to a decimal number while simultaneously converting to a char*/\\n\\n  for(i=0;i &#x3C; biString.length;i++){\\n    uniString.push(String.fromCharCode(parseInt(biString[i], 2)));\\n  }\\n\\n  // we then simply join the string\\n  return uniString.join('');\\n}\\n\\n// test here\\nbinaryAgent(\\\"01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111\\\");\\n</code></pre>\\n<p><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3\\\" alt=\\\":rocket:\\\" title=\\\":rocket:\\\"> <a href=\\\"https://repl.it/CLnm/0\\\">Run Code</a></p>\\n<h1>Code Explanation:</h1>\\n<ul>\\n<li>Separate the string into an array of strings separated by whitespace.</li>\\n<li>Create some variables that will be needed along the way, the names are self explanatory for the most part.</li>\\n<li>Iterate through each binary string in the new array.</li>\\n<li>Convert to decimal by using parseInt(<em>binary</em>, 2) (with the second parameter we tell in which base our numbers currently are)</li>\\n<li>At the end, we return out converted message.</li>\\n</ul>\\n<h2>Relevant Links</h2>\\n<ul>\\n<li><a href=\\\"http://forum.freecodecamp.com/t/javascript-string-prototype-split/15944\\\">String.prototype.split</a></li>\\n<li><a href=\\\"http://forum.freecodecamp.com/t/javascript-parseint/14686\\\">parseInt</a></li>\\n</ul>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/sunflower.png?v=3\\\" alt=\\\":sunflower:\\\" title=\\\":sunflower:\\\"> Intermediate Code Solution:</h2>\\n<pre><code>function binaryAgent(str) {\\n  // Separate the binary code by space.\\n  str = str.split(' ');\\n  var power;\\n  var decValue = 0;\\n  var sentence = '';\\n\\n  // Check each binary number from the array.\\n  for (var s = 0; s &#x3C; str.length; s++) {\\n    // Check each bit from binary number\\n    for (var t = 0; t &#x3C; str[s].length; t++) {\\n      // This only takes into consideration the active ones.\\n      if (str[s][t] == 1) {\\n        // This is quivalent to 2 ** position\\n        power = Math.pow(2, +str[s].length - t - 1);\\n        decValue += power;\\n\\n        // Record the decimal value by adding the number to the previous one.\\n      }\\n    }\\n\\n    // After the binary number is converted to decimal, convert it to string and store\\n    sentence += (String.fromCharCode(decValue));\\n\\n    // Reset decimal value for next binary number.\\n    decValue = 0;\\n  }\\n\\n  return sentence;\\n}\\n\\n// test here\\nbinaryAgent(\\\"01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111\\\");\\n</code></pre>\\n<p><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3\\\" alt=\\\":rocket:\\\" title=\\\":rocket:\\\"> <a href=\\\"https://repl.it/CLno/0\\\">Run Code</a></p>\\n<h1>Code Explanation</h1>\\n<ul>\\n<li>For each of these binary strings, check for the ones and ignore the zeroes.</li>\\n<li>For those that are one or active then convert them to decimal, this takes into account the position and the right power it needs to be raised to.</li>\\n<li>Store the power into the <strong>power</strong> variable by adding it to any previous ones on the variable <strong>decValue</strong>. This variable will add and add the powers of the active ones until the end of the loop and then return the decimal number.</li>\\n<li>Convert the final decimal outside of the inner loop and then convert it to ASCII and saving it to <strong>sentence</strong> along with any other text string already converted and stored.</li>\\n<li>Reset the variable <strong>decValue</strong> to avoid getting wrong decimals before continuing to the outer loop.</li>\\n</ul>\\n<h2>Relevant Links</h2>\\n<ul>\\n<li><a href=\\\"http://forum.freecodecamp.com/t/javascript-math-pow/14685\\\">Math.pow</a></li>\\n<li><a>String.length</a></li>\\n<li><a href=\\\"http://example.com\\\">Link Title 3</a></li>\\n</ul>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/rotating_light.png?v=3\\\" alt=\\\":rotating_light:\\\" title=\\\":rotating_light:\\\"> Advanced Code Solution:</h2>\\n<pre><code>function binaryAgent(str) {\\n  return String.fromCharCode(...str.split(\\\" \\\").map(function(char){ return parseInt(char, 2); }));\\n}\\n\\n// test here\\nbinaryAgent(\\\"01000001 01110010 01100101 01101110 00100111 01110100 00100000 01100010 01101111 01101110 01100110 01101001 01110010 01100101 01110011 00100000 01100110 01110101 01101110 00100001 00111111\\\");\\n</code></pre>\\n<p><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=3\\\" alt=\\\":rocket:\\\" title=\\\":rocket:\\\"> <a href=\\\"https://repl.it/CLnp/0\\\">Run Code</a></p>\\n<h1>Code Explanation</h1>\\n<ul>\\n<li>First we use <code>split()</code> to be able to work on each character as an Array element</li>\\n<li>Then use <code>map()</code> to process each element from binary to decimal using <code>pareseInt()</code></li>\\n<li>Last we can use <code>String.fromCharCode()</code> to convert each ASCII number into the corresponding character</li>\\n<li>However <code>fromCharCode()</code> expects a series of numbers rather than an Array! We can use ES6 Spread Operator to pass in an Array of numbers as individual numbers. See here for more info; <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator\\\">Spread Operator</a></li>\\n</ul>\\n<h2>Relevant Links</h2>\\n<ul>\\n<li><a href=\\\"http://forum.freecodecamp.com/t/javascript-array-prototype-map/14294\\\">Array.prototype.map</a></li>\\n</ul>\\n<h2><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/clipboard.png?v=3\\\" alt=\\\":clipboard:\\\" title=\\\":clipboard:\\\"> NOTES FOR CONTRIBUTIONS:</h2>\\n<ul>\\n<li><img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3\\\" alt=\\\":warning:\\\" title=\\\":warning:\\\"> <strong>DO NOT</strong> add solutions that are similar to any existing solutions. If you think it is <strong><em>similar but better</em></strong>, then try to merge (or replace) the existing similar solution.</li>\\n<li>Add an explanation of your solution.</li>\\n<li>Categorize the solution in one of the following categories — <strong>Basic</strong>, <strong>Intermediate</strong> and <strong>Advanced</strong>. <img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/traffic_light.png?v=3\\\" alt=\\\":traffic_light:\\\" title=\\\":traffic_light:\\\"></li>\\n<li>Please add your username only if you have added any <strong>relevant main contents</strong>. (<img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/warning.png?v=3\\\" alt=\\\":warning:\\\" title=\\\":warning:\\\"> <strong><em>DO NOT</em></strong> <em>remove any existing usernames</em>)</li>\\n</ul>\\n<blockquote>\\n<p>See <img src=\\\"https://forum.freecodecamp.com/images/emoji/emoji_one/point_right.png?v=3\\\" alt=\\\":point_right:\\\" title=\\\":point_right:\\\"> <a href=\\\"http://forum.freecodecamp.com/t/algorithm-article-template/14272\\\"><strong><code>Wiki Challenge Solution Template</code></strong></a> for reference.</p>\\n</blockquote>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Binary Agents\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/certificates/binary-agents/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/certificates/binary-agents/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-certificates-binary-agents.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-certificates-binary-agents.json\n// module chunks = 2044"],"sourceRoot":""}