webpackJsonp([1907],{"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-return-a-value-from-a-function-with-return.json":function(e,t){e.exports={data:{markdownRemark:{html:"<p>We can pass values into a function with <code>arguments</code>. You can use a <code>return</code> statement to send a value back out of a function.</p>\n<h2>Example</h2>\n<pre><code>function plusThree(num) {\n  return num + 3;\n}\nvar answer = plusThree(5); // 8\n</code></pre>\n<p><code>plusThree</code> takes an <code>argument</code> for <code>num</code> and returns a value equal to <code>num + 3</code>.</p>\n<p>A <code>return</code> statement will also end the execution of it's parent function. Hence, any statements inside a function scope after a <code>return</code> statement will not be executed. In case of multiple <code>return</code> statements in a function, only the first one will get executed.</p>",frontmatter:{title:"Return a Value from a Function with Return",parent:"/home/stuart/guides/src/pages/articles/certificates/return-a-value-from-a-function-with-return/index.md absPath of file"}}},pathContext:{slug:"/articles/certificates/return-a-value-from-a-function-with-return/"}}}});
//# sourceMappingURL=path---articles-certificates-return-a-value-from-a-function-with-return-e7485350034454666917.js.map