webpackJsonp([372],{"./node_modules/json-loader/index.js!./.cache/json/articles-miscellaneous-guide-to-build-a-sliding-image-gallery.json":function(e,n){e.exports={data:{markdownRemark:{html:'<p>This tutorial will walk you through building an image slider using the <a href="https://jquery.com/">jQuery</a> library.</p>\n<p><a href="https://codepen.io/atjonathan/pen/BKMxxq"><img src="//discourse-user-assets.s3.amazonaws.com/original/2X/0/08d83a22c28da836a06853b1f1ea669b398326b9.gif" alt="GIF showing Slider in action"></a></p>\n<p>This tutorial will have four parts:  </p>\n<ul>\n<li><a href="#html">HTML</a>  </li>\n<li><a href="#scss">SCSS</a>  </li>\n<li><a href="#js">JS</a>  </li>\n<li><a href="#references">References</a></li>\n</ul>\n<h2>HTML</h2>\n<p>We will be using <a href="http://getbootstrap.com/">Bootstrap</a> for this tutorial to keep things looking good, without spending a lot of time.</p>\n<p>Our structure will be as follows:</p>\n<pre><code>&#x3C;div class="container">\n\n  &#x3C;!-- The wrapper for our slider -->\n  &#x3C;div class="slider">\n    &#x3C;ul class="slides">&#x3C;!-- Each image will be inside this unordered list -->&#x3C;/ul>\n  &#x3C;/div>\n\n  &#x3C;div class="buttons">&#x3C;!-- Pause and play buttons will go in here -->&#x3C;/div>\n\n&#x3C;/div>\n</code></pre>\n<p>Inside our <code>ul</code> with the class of <code>slides</code> we will have the following:</p>\n<pre><code>&#x3C;li class="slide">&#x3C;img src="#" />&#x3C;/li>\n&#x3C;li class="slide">&#x3C;img src="#" />&#x3C;/li>\n&#x3C;li class="slide">&#x3C;img src="#" />&#x3C;/li>\n&#x3C;li class="slide">&#x3C;img src="#" />&#x3C;/li>\n&#x3C;li class="slide">&#x3C;img src="#" />&#x3C;/li>\n</code></pre>\n<p>Inside our <code>.buttons</code> class you should have the following:</p>\n<pre><code>&#x3C;button type="button" class="btn btn-default pause">\n    &#x3C;span class="glyphicon glyphicon-pause">&#x3C;/span>\n&#x3C;/button>\n&#x3C;button type="button" class="btn btn-default play">\n    &#x3C;span class="glyphicon glyphicon-play">&#x3C;/span>\n&#x3C;/button>\n</code></pre>\n<p>Here is an example of what your <code>html</code> should look like:</p>\n<blockquote>\n<p>Note: You should replace the image <code>src</code> attribute with your own content.</p>\n</blockquote>\n<pre><code>&#x3C;div class="container">\n\n  &#x3C;div class="slider">\n    &#x3C;ul class="slides">\n      &#x3C;li class="slide">&#x3C;img src="https://unsplash.it/1280/720/?image=120" />&#x3C;/li>\n      &#x3C;li class="slide">&#x3C;img src="https://unsplash.it/1280/720/?image=70" />&#x3C;/li>\n      &#x3C;li class="slide">&#x3C;img src="https://unsplash.it/1280/720/?image=50" />&#x3C;/li>\n      &#x3C;li class="slide">&#x3C;img src="https://unsplash.it/1280/720/?image=170" />&#x3C;/li>\n      &#x3C;li class="slide">&#x3C;img src="https://unsplash.it/1280/720/?image=190" />&#x3C;/li>\n    &#x3C;/ul>\n  &#x3C;/div>\n\n  &#x3C;div class="buttons">\n    &#x3C;button type="button" class="btn btn-default pause">\n      &#x3C;span class="glyphicon glyphicon-pause">&#x3C;/span>\n    &#x3C;/button>\n    &#x3C;button type="button" class="btn btn-default play">\n      &#x3C;span class="glyphicon glyphicon-play">&#x3C;/span>\n    &#x3C;/button>\n  &#x3C;/div>\n\n&#x3C;/div>\n</code></pre>\n<h2>SCSS</h2>\n<p>We are using <a href="http://sass-lang.com/">Sass</a> and the SCSS syntax so we can nest and use variables <img src="//forum.freecodecamp.com/images/emoji/emoji_one/heart_decoration.png?v=2" alt=":heart_decoration:" title=":heart_decoration:"></p>\n<p>We can use the following SCSS to define our styling:</p>\n<pre><code>// Variables\n$width: 720px;\n\n.slider {\n  width: $width;\n  height: 400px;\n  overflow: hidden;\n  margin: 0 auto;\n  text-align: center;\n\n  .slides {\n    display: block;\n    width: 6000px;\n    height: 400px;\n    margin: 0;\n    padding: 0;\n  }\n\n  .slide {\n    float: left;\n    list-style-type: none;\n    width: $width;\n    height: 400px;\n\n    img {\n      width: 100%;\n      height: 100%;\n    }\n  }\n}\n\n.buttons {\n  margin: 0;\n  width: $width;\n  position: relative;\n  top: -40px;\n  margin: 0 auto;\n\n  .play {\n    display: none;\n  }\n\n  .btn {\n    display: flex;\n    margin: 0 auto;\n    text-align: center;\n  }\n}\n</code></pre>\n<h2>JS</h2>\n<h4>Variables</h4>\n<p><em>In the following code snippet, we define variables used later in our code.</em></p>\n<pre><code>var animationSpeed = 1000; // How quickly the next slide animates.\nvar pause = 3000; // The pause between each slide.\n</code></pre>\n<p>We will use a blank variable where we will call the <code>setInterval</code> method:  </p>\n<pre><code>var interval;\n</code></pre>\n<h4>Animation We will wrap our slider animations inside a function:</h4>\n<pre><code>function startSlider() {}\n</code></pre>\n<p>We are using the <code>setInterval()</code> native JavaScript method to automate the contents of the function on a time based trigger.  </p>\n<pre><code>interval = setInterval(function() {}, pause);\n</code></pre>\n<p>We use the <code>pause</code> variable to see how many milliseconds to wait before calling the function again. Read more on the native <code>setInterval</code> method here: <a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval">https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval</a>. Inside our function we will use jQuery to fade between slides at the speed of the animationSpeed variable:  </p>\n<pre><code>$(\'.slides > li:first\')\n  .fadeOut(animationSpeed)\n  .next()\n  .fadeIn(animationSpeed)\n  .end()\n  .appendTo(\'.slides\');\n</code></pre>\n<ul>\n<li>\n<p>We are targeting the first slide using <code>$(\'.slides > li:first\')</code>. - <code>.fadeOut(animationSpeed)</code> will fade the first slide out and then using <code>.next()</code>, we move to the next slide. - Once we have moved to the next slide, we will fade it in: <code>.fadeIn(animationSpeed)</code>. - This sequence will continue until the last slide (<code>.end()</code>), then we stop the animation. We will now call the <code>startSlider</code> function to start the animation:  </p>\n<p>startSlider();</p>\n</li>\n</ul>\n<h4>Play and Pause <em>This feature is optional, but quite easy to implement.</em> We will hide the play button, so we don\'t see both the play and pause buttons:</h4>\n<pre><code>$(\'.play\').hide(); // Hiding the play button.\n</code></pre>\n<p>We will now create our pause button (automatically shown on page load):  </p>\n<pre><code>$(\'.pause\').click(function() {\n    clearInterval(interval);\n    $(this).hide();\n    $(\'.play\').show();\n});\n</code></pre>\n<ul>\n<li>\n<p>We will call our function every time the pause button is clicked using jQuery. - We will remove the interval using the <code>clearInterval</code> method and using our <code>interval</code> variable as the parameter, indicating which interval to stop. - Because our slider is paused, we will hide the pause button using <code>$(this).hide();</code>. Note: we are using <code>this</code>, which will refer to what our parent is calling i.e. <code>.pause</code>. - We will then show our play button so the user can resume the animation: <code>$(\'.play\').show();</code>. The following code sets up our play button (automatically hidden on page load):  </p>\n<p>$(\'.play\').click(function() {\nstartSlider();\n$(this).hide();\n$(\'.pause\').show();\n});</p>\n</li>\n<li>\n<p>We will call our function every time the play button is clicked using jQuery.</p>\n<ul>\n<li>We will start or restart the interval using the <code>startSlider</code> function.</li>\n<li>Because our slider is currently playing, we will hide the play button using <code>$(this).hide();</code>. Note: we are using <code>this</code>, which will refer to what our parent is calling i.e. <code>.play</code>.</li>\n<li>We will then show our pause button so the user can stop the animation at will: <code>$(\'.pause\').show();</code>.</li>\n</ul>\n</li>\n</ul>\n<h2>References</h2>\n<ul>\n<li>Checkout the source code and example on <a href="https://codepen.io/atjonathan/pen/BKMxxq">CodePen</a> for this tutorial.</li>\n</ul>',frontmatter:{title:"Guide to Build a Sliding Image Gallery",parent:"/home/stuart/guides/src/pages/articles/miscellaneous/guide-to-build-a-sliding-image-gallery/index.md absPath of file"}}},pathContext:{slug:"/articles/miscellaneous/guide-to-build-a-sliding-image-gallery/"}}}});
//# sourceMappingURL=path---articles-miscellaneous-guide-to-build-a-sliding-image-gallery-b325f0045d5565154835.js.map