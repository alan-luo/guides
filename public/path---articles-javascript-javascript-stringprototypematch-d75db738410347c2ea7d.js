webpackJsonp([1162],{"./node_modules/json-loader/index.js!./.cache/json/articles-javascript-javascript-stringprototypematch.json":function(e,t){e.exports={data:{markdownRemark:{html:"<p>The <code>match()</code> method retrieves the matches when matching a string against a regular expression.</p>\n<h2>Syntax</h2>\n<pre><code>str.match(regexp)\n</code></pre>\n<h2>Parameters</h2>\n<p><strong>regexp</strong></p>\n<p>A regular expression object. If a non-RegExp object obj is passed, it is implicitly converted to a RegExp by using <code>new RegExp(obj)</code>.</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match\">MDN link</a> | <a href=\"https://msdn.microsoft.com/en-us/LIBRary/7df7sf4x(v=vs.94).aspx\">MSDN link</a></p>\n<h2>Returns</h2>\n<p>An <code>Array</code> containing the matched results or <code>null</code> if there were no matches.</p>\n<h2>Description</h2>\n<p>If the regular expression does not include the <code>g</code> flag, returns the same result as <code>RegExp.exec()</code>. The returned <code>Array</code> has an extra input property, which contains the original string that was parsed. In addition, it has an index property, which represents the zero-based index of the match in the string.</p>\n<p>If the regular expression includes the <code>g</code> flag, the method returns an <code>Array</code> containing all matched substrings rather than match objects. Captured groups are not returned. If there were no matches, the method returns <code>null</code>.</p>\n<h2>Examples</h2>\n<pre><code>var str = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\nvar regexp = /[A-E]/gi;\nvar matches_array = str.match(regexp);\n\nconsole.log(matches_array);\n// ['A', 'B', 'C', 'D', 'E', 'a', 'b', 'c', 'd', 'e']\n\nvar str = 'For more information, see Chapter 3.4.5.1';\nvar re = /(chapter \\d+(\\.\\d)*)/i;\nvar found = str.match(re);\n\nconsole.log(found);\n\n// logs ['Chapter 3.4.5.1', 'Chapter 3.4.5.1', '.1']\n\n// 'Chapter 3.4.5.1' is the first match and the first value \n// remembered from `(Chapter \\d+(\\.\\d)*)`.\n\n// '.1' is the last value remembered from `(\\.\\d)`.\n</code></pre>",frontmatter:{title:"String.prototype.match",parent:"/home/stuart/guides/src/pages/articles/javascript/javascript-stringprototypematch/index.md absPath of file"}}},pathContext:{slug:"/articles/javascript/javascript-stringprototypematch/"}}}});
//# sourceMappingURL=path---articles-javascript-javascript-stringprototypematch-d75db738410347c2ea7d.js.map