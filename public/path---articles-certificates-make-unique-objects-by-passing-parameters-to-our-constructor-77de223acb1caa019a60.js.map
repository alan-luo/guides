{"version":3,"sources":["webpack:///path---articles-certificates-make-unique-objects-by-passing-parameters-to-our-constructor-77de223acb1caa019a60.js","webpack:///./.cache/json/articles-certificates-make-unique-objects-by-passing-parameters-to-our-constructor.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-certificates-make-unique-objects-by-passing-parameters-to-our-constructor.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,OAERC,4IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,8hBACAC,aACAC,MAAA,uFACAC,OAAA,+IAIAC,aACAC,KAAA","file":"path---articles-certificates-make-unique-objects-by-passing-parameters-to-our-constructor-77de223acb1caa019a60.js","sourcesContent":["webpackJsonp([2163],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-make-unique-objects-by-passing-parameters-to-our-constructor.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p>When you have a constructor but don't want to keep creating the same object, all you have to do is add parameters to the constructor the following way:</p>\\n<pre><code>var Car = function(wheels, seats, engines) {\\n\\n  this.wheels = wheels;\\n\\n  this.seats = seats;\\n\\n  this.engines = engines;\\n\\n};\\n</code></pre>\\n<p>Now you can pass in arguments when you call the constructor. <code>var myCar = new Car(6, 3, 1);</code></p>\\n<p>This will result in:</p>\\n<pre><code>{\\n\\n  wheels: 6,\\n\\n  seats: 3,\\n\\n  engines: 1\\n\\n}\\n</code></pre>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Make Unique Objects by Passing Parameters to Our function Object() { [native code] }\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/certificates/make-unique-objects-by-passing-parameters-to-our-constructor/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/certificates/make-unique-objects-by-passing-parameters-to-our-constructor/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-certificates-make-unique-objects-by-passing-parameters-to-our-constructor-77de223acb1caa019a60.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p>When you have a constructor but don't want to keep creating the same object, all you have to do is add parameters to the constructor the following way:</p>\\n<pre><code>var Car = function(wheels, seats, engines) {\\n\\n  this.wheels = wheels;\\n\\n  this.seats = seats;\\n\\n  this.engines = engines;\\n\\n};\\n</code></pre>\\n<p>Now you can pass in arguments when you call the constructor. <code>var myCar = new Car(6, 3, 1);</code></p>\\n<p>This will result in:</p>\\n<pre><code>{\\n\\n  wheels: 6,\\n\\n  seats: 3,\\n\\n  engines: 1\\n\\n}\\n</code></pre>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Make Unique Objects by Passing Parameters to Our function Object() { [native code] }\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/certificates/make-unique-objects-by-passing-parameters-to-our-constructor/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/certificates/make-unique-objects-by-passing-parameters-to-our-constructor/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-certificates-make-unique-objects-by-passing-parameters-to-our-constructor.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-certificates-make-unique-objects-by-passing-parameters-to-our-constructor.json\n// module chunks = 2163"],"sourceRoot":""}