webpackJsonp([1935],{"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-make-unique-objects-by-passing-parameters-to-our-constructor.json":function(e,t){e.exports={data:{markdownRemark:{html:"<p>When you have a constructor but don't want to keep creating the same object, all you have to do is add parameters to the constructor the following way:</p>\n<pre><code>var Car = function(wheels, seats, engines) {\n\n  this.wheels = wheels;\n\n  this.seats = seats;\n\n  this.engines = engines;\n\n};\n</code></pre>\n<p>Now you can pass in arguments when you call the constructor. <code>var myCar = new Car(6, 3, 1);</code></p>\n<p>This will result in:</p>\n<pre><code>{\n\n  wheels: 6,\n\n  seats: 3,\n\n  engines: 1\n\n}\n</code></pre>",frontmatter:{title:"Make Unique Objects By Passing Parameters To Our function Object() { [native code] }",parent:"/home/stuart/guides/src/pages/articles/certificates/make-unique-objects-by-passing-parameters-to-our-constructor/index.md absPath of file"}}},pathContext:{slug:"/articles/certificates/make-unique-objects-by-passing-parameters-to-our-constructor/"}}}});
//# sourceMappingURL=path---articles-certificates-make-unique-objects-by-passing-parameters-to-our-constructor-9e20adb0cc226fefb717.js.map