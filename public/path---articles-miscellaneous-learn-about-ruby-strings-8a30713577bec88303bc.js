webpackJsonp([295],{"./node_modules/json-loader/index.js!./.cache/json/articles-miscellaneous-learn-about-ruby-strings.json":function(e,n){e.exports={data:{markdownRemark:{html:'<h3>Basics:</h3>\n<ul>\n<li>\n<p>Strings are a series of characters \'strung\' together between quotes.</p>\n</li>\n<li>\n<p>Single or double quotes can be used to create strings in Ruby.</p>\n</li>\n<li>\n<p>Ruby does some extra evaluation on strings that are created with double quotes, such as:</p>\n<ul>\n<li>\n<p>Escaping characters: <code>\\n</code>, <code>\\t</code>, <code>\\s</code></p>\n</li>\n<li>\n<p>Using variables and expressions inside: <code>#{variable or expression}</code></p>\n</li>\n</ul>\n</li>\n<li>\n<p>Strings with single quotes are rendered as they are, without any special considerations.</p>\n</li>\n</ul>\n<h2>Examples:</h2>\n<pre><code>"Hello World"\n# is equivalent to:\n\'Hello World\'\n\n"This is line 1.\\nAnd this is line 2."\n# returns:\nThis is line 1.\nAnd this is line 2.\n\nname = "Batman"\n"Hello, my name is #{name}!"\n# returns:\nHello, my name is Batman!\n\n# Note that for single quotes, ruby doesn\'t take special consideration for variables or backslashes:\n\'This is your name:\\n#{name}\'\n# returns:\nThis is your name:\\n#{name}\n</code></pre>\n<h2>References:</h2>\n<ul>\n<li><a href="http://ruby-doc.org/core-2.2.0/String.html">The official Ruby documentation for strings</a>.</li>\n</ul>',frontmatter:{title:"Learn About Ruby Strings",parent:"/home/stuart/guides/src/pages/articles/miscellaneous/learn-about-ruby-strings/index.md absPath of file"}}},pathContext:{slug:"/articles/miscellaneous/learn-about-ruby-strings/"}}}});
//# sourceMappingURL=path---articles-miscellaneous-learn-about-ruby-strings-8a30713577bec88303bc.js.map