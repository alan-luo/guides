{"version":3,"sources":["webpack:///path---articles-certificates-override-all-other-styles-by-using-important-25dcd8a0854bbd426673.js","webpack:///./.cache/json/articles-certificates-override-all-other-styles-by-using-important.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-certificates-override-all-other-styles-by-using-important.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,OAERC,4HACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,wWACAC,aACAC,MAAA,+CACAC,OAAA,+HAIAC,aACAC,KAAA","file":"path---articles-certificates-override-all-other-styles-by-using-important-25dcd8a0854bbd426673.js","sourcesContent":["webpackJsonp([1926],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-override-all-other-styles-by-using-important.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p>In many situations, you will use CSS libraries. These may accidentally override your own CSS. So when you absolutely need to be sure that an element has specific CSS, you can use !important.</p>\\n<p>An example of how to do this is: <code>color: red !important;</code> This will make sure that we use the wanted property regardless of other overrides.</p>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Override All Other Styles by Using Important\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/certificates/override-all-other-styles-by-using-important/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/certificates/override-all-other-styles-by-using-important/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-certificates-override-all-other-styles-by-using-important-25dcd8a0854bbd426673.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p>In many situations, you will use CSS libraries. These may accidentally override your own CSS. So when you absolutely need to be sure that an element has specific CSS, you can use !important.</p>\\n<p>An example of how to do this is: <code>color: red !important;</code> This will make sure that we use the wanted property regardless of other overrides.</p>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Override All Other Styles by Using Important\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/certificates/override-all-other-styles-by-using-important/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/certificates/override-all-other-styles-by-using-important/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-certificates-override-all-other-styles-by-using-important.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-certificates-override-all-other-styles-by-using-important.json\n// module chunks = 1926"],"sourceRoot":""}