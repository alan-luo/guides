webpackJsonp([2143],{"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-passing-values-to-functions-with-arguments.json":function(e,a){e.exports={data:{markdownRemark:{html:'<p><code>Parameters</code> are variables that act as placeholders for the values that are to be input to a function when it is called. When a function is defined, it is typically defined along with one or more parameters. The actual values that are input (or "<em>passed</em>") into a function when it is called are known as <code>arguments</code>.</p>\n<p>Here is a function with two parameters, <code>param1</code> and <code>param2</code>:</p>\n<pre><code>function functionWithArgs(param1, param2) {\n  console.log(param1, param2);\n}\n</code></pre>\n<p>Then we can call functionWithArgs:</p>\n<p><code>functionWithArgs("Hello", "World");</code></p>\n<p>We have passed two arguments, <code>"Hello"</code> and <code>"World"</code>. Inside the function, <code>param1</code> will equal "Hello" and <code>param2</code> will equal "World". Note that you could call <code>functionWithArgs</code> again with different arguments and the parameters would take on the value of the new arguments.</p>',frontmatter:{title:"Passing Values to Functions with Arguments",parent:"/home/stuart/guides/src/pages/articles/certificates/passing-values-to-functions-with-arguments/index.md absPath of file"}}},pathContext:{slug:"/articles/certificates/passing-values-to-functions-with-arguments/"}}}});
//# sourceMappingURL=path---articles-certificates-passing-values-to-functions-with-arguments-44530f4f57f3b5a045ce.js.map