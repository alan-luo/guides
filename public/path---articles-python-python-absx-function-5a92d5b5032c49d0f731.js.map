{"version":3,"sources":["webpack:///path---articles-python-python-absx-function-5a92d5b5032c49d0f731.js","webpack:///./.cache/json/articles-python-python-absx-function.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-python-python-absx-function.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,MAERC,8FACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,mlCACAC,aACAC,MAAA,uBACAC,OAAA,iGAIAC,aACAC,KAAA","file":"path---articles-python-python-absx-function-5a92d5b5032c49d0f731.js","sourcesContent":["webpackJsonp([207],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-python-python-absx-function.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p><code>abs()</code> is a built-in function in Python 3, to compute the absolute value of any number. It takes one argument <code>x</code>. The argument can even be a <a href=\\\"https://docs.python.org/3.0/library/cmath.html\\\">complex number</a>, and in that case its <a href=\\\"http://www.mathcentre.ac.uk/resources/sigma%20complex%20number%20leaflets/sigma-complex9-2009-1.pdf\\\">modulus</a> is returned.</p>\\n<h2>Argument</h2>\\n<p>It takes one argument <code>x</code> - an integer, or decimal, or a complex number.</p>\\n<h2>Return Value</h2>\\n<p>The return value would be a positive number. Even if complex number is passed, it would return its magnitude, computed as per complex number algebra.</p>\\n<h2>Code Sample</h2>\\n<pre><code>print(abs(3.4)) # prints 3.4\\nprint(abs(-6)) # prints 6\\nprint(abs(3 + 4j)) # prints 5, because |3 + 4j| = 5\\n</code></pre>\\n<p><img src=\\\"//forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=2\\\" alt=\\\":rocket:\\\" title=\\\":rocket:\\\"> <a href=\\\"https://repl.it/CL8k/0\\\">Run Code</a></p>\\n<p><a href=\\\"https://docs.python.org/3/library/functions.html#abs\\\">Official Docs</a></p>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Python Absx Function\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/python/python-absx-function/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/python/python-absx-function/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-python-python-absx-function-5a92d5b5032c49d0f731.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p><code>abs()</code> is a built-in function in Python 3, to compute the absolute value of any number. It takes one argument <code>x</code>. The argument can even be a <a href=\\\"https://docs.python.org/3.0/library/cmath.html\\\">complex number</a>, and in that case its <a href=\\\"http://www.mathcentre.ac.uk/resources/sigma%20complex%20number%20leaflets/sigma-complex9-2009-1.pdf\\\">modulus</a> is returned.</p>\\n<h2>Argument</h2>\\n<p>It takes one argument <code>x</code> - an integer, or decimal, or a complex number.</p>\\n<h2>Return Value</h2>\\n<p>The return value would be a positive number. Even if complex number is passed, it would return its magnitude, computed as per complex number algebra.</p>\\n<h2>Code Sample</h2>\\n<pre><code>print(abs(3.4)) # prints 3.4\\nprint(abs(-6)) # prints 6\\nprint(abs(3 + 4j)) # prints 5, because |3 + 4j| = 5\\n</code></pre>\\n<p><img src=\\\"//forum.freecodecamp.com/images/emoji/emoji_one/rocket.png?v=2\\\" alt=\\\":rocket:\\\" title=\\\":rocket:\\\"> <a href=\\\"https://repl.it/CL8k/0\\\">Run Code</a></p>\\n<p><a href=\\\"https://docs.python.org/3/library/functions.html#abs\\\">Official Docs</a></p>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Python Absx Function\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/python/python-absx-function/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/python/python-absx-function/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-python-python-absx-function.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-python-python-absx-function.json\n// module chunks = 207"],"sourceRoot":""}