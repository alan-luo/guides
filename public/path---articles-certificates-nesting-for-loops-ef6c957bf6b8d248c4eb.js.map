{"version":3,"sources":["webpack:///path---articles-certificates-nesting-for-loops-ef6c957bf6b8d248c4eb.js","webpack:///./.cache/json/articles-certificates-nesting-for-loops.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/articles-certificates-nesting-for-loops.json","module","exports","data","markdownRemark","html","frontmatter","title","parent","pathContext","slug"],"mappings":"AAAAA,cAAc,OAERC,iGACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,gBACAC,KAAA,imBACAC,aACAC,MAAA,oBACAC,OAAA,oGAIAC,aACAC,KAAA","file":"path---articles-certificates-nesting-for-loops-ef6c957bf6b8d248c4eb.js","sourcesContent":["webpackJsonp([2150],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/articles-certificates-nesting-for-loops.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"markdownRemark\": {\n\t\t\t\t\"html\": \"<p>If you have a multi-dimensional array, you can use the same logic as the prior Challenge to loop through both the array and any sub-arrays. Here is an example:</p>\\n<pre><code>    var arr = [\\n      [1,2], [3,4], [5,6]\\n    ];\\n    for (var i=0; i &#x3C; arr.length; i++) {\\n      for (var j=0; j &#x3C; arr[i].length; j++) {\\n        console.log(arr[i][j]);\\n      }\\n    }\\n</code></pre>\\n<p>This outputs each sub-element in <code>arr</code> one at a time. Note that for the inner loop, we are checking the <code>.length</code> of <code>arr[i]</code>, since <code>arr[i]</code> is itself an array.</p>\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Nesting for Loops\",\n\t\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/certificates/nesting-for-loops/index.md absPath of file\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/articles/certificates/nesting-for-loops/\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---articles-certificates-nesting-for-loops-ef6c957bf6b8d248c4eb.js","module.exports = {\n\t\"data\": {\n\t\t\"markdownRemark\": {\n\t\t\t\"html\": \"<p>If you have a multi-dimensional array, you can use the same logic as the prior Challenge to loop through both the array and any sub-arrays. Here is an example:</p>\\n<pre><code>    var arr = [\\n      [1,2], [3,4], [5,6]\\n    ];\\n    for (var i=0; i &#x3C; arr.length; i++) {\\n      for (var j=0; j &#x3C; arr[i].length; j++) {\\n        console.log(arr[i][j]);\\n      }\\n    }\\n</code></pre>\\n<p>This outputs each sub-element in <code>arr</code> one at a time. Note that for the inner loop, we are checking the <code>.length</code> of <code>arr[i]</code>, since <code>arr[i]</code> is itself an array.</p>\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Nesting for Loops\",\n\t\t\t\t\"parent\": \"/home/stuart/guides/src/pages/articles/certificates/nesting-for-loops/index.md absPath of file\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/articles/certificates/nesting-for-loops/\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/articles-certificates-nesting-for-loops.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/articles-certificates-nesting-for-loops.json\n// module chunks = 2150"],"sourceRoot":""}